/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MAIN;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;
import java.awt.Image;
import java.io.File;
import java.sql.Timestamp;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableRowSorter;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Nguyen Nhat
 */
public class ADMIN extends javax.swing.JDialog {

    /**
     * Creates new form ADMIN
     */
    DefaultTableModel dtm, dtm2;
    private String maNV, maDV, maLoaiDV, maKH;
    Connection ketNoi = KNCSDL.layKetNoi();

    public ADMIN() {
        initComponents();
        this.setModal(true);
        lb_Loi0.setVisible(false);
        lb_Loi1.setVisible(false);
        lb_Loi2.setVisible(false);
        lb_Loi3.setVisible(false);
        lb_Loi4.setVisible(false);
        lb_Loi5.setVisible(false);
        btn_SuaNV.setEnabled(false); //1401
        btn_KichHoat.setEnabled(false);
        btn_HuyKichHoat.setEnabled(false);
        loi_KH1.setVisible(false);
        loi_KH2.setVisible(false);
        loi_KH3.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gtbGioiTinhNhanVien = new javax.swing.ButtonGroup();
        gbtnChonDichVuLoaiDichVu = new javax.swing.ButtonGroup();
        jFreeChartResources1 = new org.jfree.chart.resources.JFreeChartResources();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnNhanVien = new javax.swing.JPanel();
        lbQuanLyNhanVien = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDanhSachNhanVien = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lbTenNV = new javax.swing.JLabel();
        lbSoDTNhanVien = new javax.swing.JLabel();
        lbNgaySinhNhanVien = new javax.swing.JLabel();
        lbDiaChiNhanVien1 = new javax.swing.JLabel();
        lbGioiTinh = new javax.swing.JLabel();
        rb_NamNV = new javax.swing.JRadioButton();
        rb_NuNV = new javax.swing.JRadioButton();
        txt_DiaChiNV = new javax.swing.JTextField();
        txt_NgaySinhNV = new javax.swing.JTextField();
        txt_SoDTNV = new javax.swing.JTextField();
        txt_TenNV = new javax.swing.JTextField();
        btn_TimKiemNV = new javax.swing.JButton();
        btn_ThemNV = new javax.swing.JButton();
        btn_SuaNV = new javax.swing.JButton();
        btn_HuyKichHoat = new javax.swing.JButton();
        btn_DatLaiNV = new javax.swing.JButton();
        lb_Loi0 = new javax.swing.JLabel();
        lb_Loi1 = new javax.swing.JLabel();
        lb_Loi2 = new javax.swing.JLabel();
        lb_Loi3 = new javax.swing.JLabel();
        lb_Loi4 = new javax.swing.JLabel();
        lbTenNV1 = new javax.swing.JLabel();
        txt_CMND = new javax.swing.JTextField();
        lb_Loi5 = new javax.swing.JLabel();
        btn_KichHoat = new javax.swing.JButton();
        pnKhachHang = new javax.swing.JPanel();
        lbQuanLyNhanVien1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbDanhSachKhachHang = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lbSoDTKhachHang = new javax.swing.JLabel();
        lbTenKhachHang = new javax.swing.JLabel();
        lbDiaChiKhachHang = new javax.swing.JLabel();
        lbDiemTichLuy = new javax.swing.JLabel();
        txt_DiemTL = new javax.swing.JTextField();
        txt_DiaChiKH = new javax.swing.JTextField();
        txt_TenKH = new javax.swing.JTextField();
        txt_SoDTKH = new javax.swing.JTextField();
        btn_TimKiemKH = new javax.swing.JButton();
        btn_ThemKH = new javax.swing.JButton();
        btnSuaKH = new javax.swing.JButton();
        btn_XoaKH = new javax.swing.JButton();
        loi_KH2 = new javax.swing.JLabel();
        loi_KH3 = new javax.swing.JLabel();
        loi_KH1 = new javax.swing.JLabel();
        pnHoaDon = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txt_HoaDonMa = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cb_HoaDonNV = new javax.swing.JComboBox<>();
        date_HoaDon = new datechooser.beans.DateChooserCombo();
        btn_TimKiemHoaDon = new javax.swing.JButton();
        btn_XoaHoaDon = new javax.swing.JButton();
        txt_HoaDonKH = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        btn_TimKiemNgay = new javax.swing.JButton();
        btn_TimKiemHDNV = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbCTHoaDon = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        pnTaiKhoan = new javax.swing.JPanel();
        lb_QLTK = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_TenDangNhap = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cb_TaiKhoan2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        pw_MatKhauNV1 = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        pw_MatKhauNV2 = new javax.swing.JPasswordField();
        btn_TaoTK = new javax.swing.JButton();
        btn_LamMoiTK = new javax.swing.JButton();
        cb_TaiKhoan1 = new javax.swing.JComboBox<>();
        btn_XoaTK = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        txt_TenDangNhapDMK = new javax.swing.JTextField();
        pw_MatKhauDMK1 = new javax.swing.JPasswordField();
        pw_MatKhauDMK2 = new javax.swing.JPasswordField();
        btn_DoiMK = new javax.swing.JButton();
        btn_HuyKichHoatDMK = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btn_KichHoatDMK = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tb_TaiKhoan = new javax.swing.JTable();
        pnDichVu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cbLuaChonKhoiTaoDV = new javax.swing.JComboBox<>();
        txt_TenDV = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        cbNhomDV = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        txt_GiaDV = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbDV = new javax.swing.JTable();
        btnThemDV = new javax.swing.JButton();
        btnSuaDV = new javax.swing.JButton();
        btnLamMoiDV = new javax.swing.JButton();
        lb_HinhAnh = new javax.swing.JLabel();
        txt_HinhAnhDV = new javax.swing.JTextField();
        btn_ChonAnh = new javax.swing.JButton();
        lb_Hinh = new javax.swing.JLabel();
        lb_DangHoatDong = new javax.swing.JLabel();
        rb_CoHoatDong = new javax.swing.JRadioButton();
        rb_KhongHoatDong = new javax.swing.JRadioButton();
        btn_XoaDV = new javax.swing.JButton();
        pnThongKe = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        date_BD = new datechooser.beans.DateChooserCombo();
        date_KT = new datechooser.beans.DateChooserCombo();
        btn_ThongKe = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        cbNhomDV_ThongKe = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txt_TongLuotKhach = new javax.swing.JTextField();
        txt_TongChietKhau = new javax.swing.JTextField();
        txt_TongDoanhThu = new javax.swing.JTextField();
        cb_ThoiGian = new javax.swing.JComboBox<>();
        jpanel_ThongKe = new javax.swing.JPanel();
        jPanel_XuHuong = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TRÌNH QUẢN LÝ THỐNG KÊ");
        setSize(new java.awt.Dimension(1375, 737));

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        pnNhanVien.setPreferredSize(new java.awt.Dimension(1529, 768));

        lbQuanLyNhanVien.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lbQuanLyNhanVien.setText("QUẢN LÝ NHÂN VIÊN");

        tbDanhSachNhanVien.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbDanhSachNhanVien.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbDanhSachNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "CMND", "Tên Nhân viên", "Ngày Sinh", "Giới tính", "SĐT", "Địa chỉ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDanhSachNhanVien.getTableHeader().setReorderingAllowed(false);
        tbDanhSachNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhSachNhanVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbDanhSachNhanVien);
        if (tbDanhSachNhanVien.getColumnModel().getColumnCount() > 0) {
            tbDanhSachNhanVien.getColumnModel().getColumn(0).setMaxWidth(80);
            tbDanhSachNhanVien.getColumnModel().getColumn(3).setPreferredWidth(50);
            tbDanhSachNhanVien.getColumnModel().getColumn(4).setPreferredWidth(30);
            tbDanhSachNhanVien.getColumnModel().getColumn(6).setResizable(false);
            tbDanhSachNhanVien.getColumnModel().getColumn(6).setPreferredWidth(20);
        }

        lbTenNV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbTenNV.setText("Tên Nhân Viên:");

        lbSoDTNhanVien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbSoDTNhanVien.setText("Số Điện Thoại:");

        lbNgaySinhNhanVien.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbNgaySinhNhanVien.setText("Ngày sinh      :");

        lbDiaChiNhanVien1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbDiaChiNhanVien1.setText("Địa Chỉ          :");

        lbGioiTinh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbGioiTinh.setText("Giới Tính       :");

        gtbGioiTinhNhanVien.add(rb_NamNV);
        rb_NamNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb_NamNV.setText("Nam");

        gtbGioiTinhNhanVien.add(rb_NuNV);
        rb_NuNV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb_NuNV.setText("Nữ");

        txt_SoDTNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SoDTNVKeyTyped(evt);
            }
        });

        txt_TenNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TenNVKeyTyped(evt);
            }
        });

        btn_TimKiemNV.setText("Tìm Kiếm theo SĐT");
        btn_TimKiemNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TimKiemNVMouseClicked(evt);
            }
        });

        btn_ThemNV.setText("Thêm Mới");
        btn_ThemNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ThemNVMouseClicked(evt);
            }
        });

        btn_SuaNV.setText("Cập Nhật");
        btn_SuaNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_SuaNVMouseClicked(evt);
            }
        });

        btn_HuyKichHoat.setText("Huỷ kích hoạt");
        btn_HuyKichHoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_HuyKichHoatMouseClicked(evt);
            }
        });

        btn_DatLaiNV.setText("Đặt Lại");
        btn_DatLaiNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_DatLaiNVMouseClicked(evt);
            }
        });

        lb_Loi0.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lb_Loi0.setForeground(new java.awt.Color(255, 0, 0));
        lb_Loi0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Loi0.setText("!");

        lb_Loi1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lb_Loi1.setForeground(new java.awt.Color(255, 0, 0));
        lb_Loi1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Loi1.setText("!");

        lb_Loi2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lb_Loi2.setForeground(new java.awt.Color(255, 0, 0));
        lb_Loi2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Loi2.setText("!");

        lb_Loi3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lb_Loi3.setForeground(new java.awt.Color(255, 0, 0));
        lb_Loi3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Loi3.setText("!");

        lb_Loi4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lb_Loi4.setForeground(new java.awt.Color(255, 0, 0));
        lb_Loi4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Loi4.setText("!");

        lbTenNV1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbTenNV1.setText("Số CMND:");

        txt_CMND.setToolTipText("");
        txt_CMND.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_CMNDKeyTyped(evt);
            }
        });

        lb_Loi5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lb_Loi5.setForeground(new java.awt.Color(255, 0, 0));
        lb_Loi5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Loi5.setText("!");

        btn_KichHoat.setText("Kích hoạt");
        btn_KichHoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_KichHoatMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lbTenNV))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbNgaySinhNhanVien)
                                    .addComponent(lbDiaChiNhanVien1)
                                    .addComponent(lbGioiTinh)
                                    .addComponent(lbSoDTNhanVien))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbTenNV1)
                        .addGap(56, 56, 56)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_NgaySinhNV, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addComponent(txt_TenNV)
                    .addComponent(txt_SoDTNV)
                    .addComponent(txt_DiaChiNV)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rb_NamNV)
                        .addGap(34, 34, 34)
                        .addComponent(rb_NuNV, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lb_Loi4, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_CMND))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lb_Loi1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_Loi2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_Loi3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_Loi5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_Loi0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_HuyKichHoat, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_SuaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_ThemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_DatLaiNV, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_KichHoat, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_TimKiemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btn_ThemNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btn_SuaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btn_HuyKichHoat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btn_KichHoat, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btn_DatLaiNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_TenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTenNV, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_Loi0))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_CMND, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTenNV1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_Loi5))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_SoDTNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSoDTNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_Loi1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_NgaySinhNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNgaySinhNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_Loi2))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_DiaChiNV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbDiaChiNhanVien1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_Loi3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rb_NamNV)
                            .addComponent(rb_NuNV)
                            .addComponent(lbGioiTinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lb_Loi4))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout pnNhanVienLayout = new javax.swing.GroupLayout(pnNhanVien);
        pnNhanVien.setLayout(pnNhanVienLayout);
        pnNhanVienLayout.setHorizontalGroup(
            pnNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNhanVienLayout.createSequentialGroup()
                .addGroup(pnNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnNhanVienLayout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(lbQuanLyNhanVien))
                    .addGroup(pnNhanVienLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnNhanVienLayout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(408, Short.MAX_VALUE))
        );
        pnNhanVienLayout.setVerticalGroup(
            pnNhanVienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNhanVienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbQuanLyNhanVien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nhân Viên", pnNhanVien);

        pnKhachHang.setPreferredSize(new java.awt.Dimension(1000, 600));
        pnKhachHang.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnKhachHangMouseMoved(evt);
            }
        });

        lbQuanLyNhanVien1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lbQuanLyNhanVien1.setText("QUẢN LÝ KHÁCH HÀNG");

        tbDanhSachKhachHang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tbDanhSachKhachHang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbDanhSachKhachHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Số ĐT", "Tên Khách Hàng", "Địa chỉ", "Điểm Tích Lũy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDanhSachKhachHang.getTableHeader().setReorderingAllowed(false);
        tbDanhSachKhachHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDanhSachKhachHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbDanhSachKhachHang);

        lbSoDTKhachHang.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbSoDTKhachHang.setText("Số Điện Thoại    :");

        lbTenKhachHang.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbTenKhachHang.setText("Tên Khách Hàng :");

        lbDiaChiKhachHang.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbDiaChiKhachHang.setText("Địa Chỉ:");

        lbDiemTichLuy.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lbDiemTichLuy.setText("Điểm Tích Lũy   :");

        txt_DiemTL.setText("0");
        txt_DiemTL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_DiemTLKeyTyped(evt);
            }
        });

        txt_TenKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TenKHKeyTyped(evt);
            }
        });

        txt_SoDTKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_SoDTKHKeyTyped(evt);
            }
        });

        btn_TimKiemKH.setText("Tìm Kiếm theo SĐT");
        btn_TimKiemKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TimKiemKHMouseClicked(evt);
            }
        });

        btn_ThemKH.setText("Thêm Mới");
        btn_ThemKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ThemKHMouseClicked(evt);
            }
        });

        btnSuaKH.setText("Cập Nhật");
        btnSuaKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaKHMouseClicked(evt);
            }
        });

        btn_XoaKH.setText("Xóa");
        btn_XoaKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_XoaKHMouseClicked(evt);
            }
        });

        loi_KH2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        loi_KH2.setForeground(new java.awt.Color(255, 0, 0));
        loi_KH2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loi_KH2.setText("!");

        loi_KH3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        loi_KH3.setForeground(new java.awt.Color(255, 0, 0));
        loi_KH3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loi_KH3.setText("!");

        loi_KH1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        loi_KH1.setForeground(new java.awt.Color(255, 0, 0));
        loi_KH1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loi_KH1.setText("!");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDiemTichLuy)
                            .addComponent(lbDiaChiKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbTenKhachHang))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbSoDTKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txt_TenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(loi_KH2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_SoDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(loi_KH1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txt_DiaChiKH, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(loi_KH3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_DiemTL, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_TimKiemKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_ThemKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_XoaKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(168, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSuaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_XoaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_SoDTKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbSoDTKhachHang)
                            .addComponent(btn_TimKiemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loi_KH1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_TenKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbTenKhachHang)
                            .addComponent(btn_ThemKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loi_KH2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDiaChiKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_DiaChiKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loi_KH3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDiemTichLuy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_DiemTL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout pnKhachHangLayout = new javax.swing.GroupLayout(pnKhachHang);
        pnKhachHang.setLayout(pnKhachHangLayout);
        pnKhachHangLayout.setHorizontalGroup(
            pnKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKhachHangLayout.createSequentialGroup()
                .addGroup(pnKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnKhachHangLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnKhachHangLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(lbQuanLyNhanVien1))
                    .addGroup(pnKhachHangLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 869, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(333, Short.MAX_VALUE))
        );
        pnKhachHangLayout.setVerticalGroup(
            pnKhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnKhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbQuanLyNhanVien1)
                .addGap(21, 21, 21)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(285, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Khách Hàng", pnKhachHang);

        tbHoaDon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hóa Đơn", "Ngày lập", "SĐT Khách Hàng ", "Chiết khấu %", "Tổng tiền", "Nhân Viên"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbHoaDon);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel23.setText("Tìm kiếm mã hoá đơn:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel21.setText("Đơn Vị Thời Gian :");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel26.setText("Nhân Viên :");

        cb_HoaDonNV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_HoaDonNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_HoaDonNVActionPerformed(evt);
            }
        });

        date_HoaDon.setCalendarPreferredSize(new java.awt.Dimension(400, 300));
        date_HoaDon.setWeekStyle(datechooser.view.WeekDaysStyle.SHORT);
        date_HoaDon.setFieldFont(new java.awt.Font("Times New Roman", java.awt.Font.PLAIN, 16));
        date_HoaDon.setLocale(new java.util.Locale("en", "GB", ""));
        date_HoaDon.setShowOneMonth(true);

        btn_TimKiemHoaDon.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btn_TimKiemHoaDon.setText("Tìm Kiếm theo mã");
        btn_TimKiemHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TimKiemHoaDonMouseClicked(evt);
            }
        });

        btn_XoaHoaDon.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btn_XoaHoaDon.setText("Xóa hóa đơn");
        btn_XoaHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_XoaHoaDonMouseClicked(evt);
            }
        });

        txt_HoaDonKH.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_HoaDonKHKeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel25.setText("Tìm kiếm hoá đơn KH:");

        btn_TimKiemNgay.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btn_TimKiemNgay.setText("Tìm kiếm theo ngày");
        btn_TimKiemNgay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TimKiemNgayMouseClicked(evt);
            }
        });

        btn_TimKiemHDNV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btn_TimKiemHDNV.setText("Tìm kiếm theo nhân viên");
        btn_TimKiemHDNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TimKiemHDNVMouseClicked(evt);
            }
        });

        tbCTHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Loại dịch vụ", "Dịch vụ ", "Số lượng", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbCTHoaDon);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_HoaDonMa, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_HoaDonNV, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date_HoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txt_HoaDonKH, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_TimKiemHDNV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_TimKiemNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_TimKiemHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_XoaHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_HoaDonKH, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_TimKiemHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_HoaDonMa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_TimKiemNgay))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel21))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_TimKiemHDNV)
                                    .addComponent(date_HoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cb_HoaDonNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_XoaHoaDon)))
                        .addContainerGap(83, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel17.setText("QUẢN LÝ HOÁ ĐƠN");

        javax.swing.GroupLayout pnHoaDonLayout = new javax.swing.GroupLayout(pnHoaDon);
        pnHoaDon.setLayout(pnHoaDonLayout);
        pnHoaDonLayout.setHorizontalGroup(
            pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHoaDonLayout.createSequentialGroup()
                .addGroup(pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnHoaDonLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnHoaDonLayout.createSequentialGroup()
                        .addGap(383, 383, 383)
                        .addComponent(jLabel17))
                    .addGroup(pnHoaDonLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 872, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        pnHoaDonLayout.setVerticalGroup(
            pnHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnHoaDonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Hóa Đơn", pnHoaDon);

        lb_QLTK.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        lb_QLTK.setText("QUẢN LÝ TÀI KHOẢN");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tạo Tài Khoản");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Tên Đăng Nhập:");

        txt_TenDangNhap.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("Mã Nhân Viên:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("Vai Trò:");

        cb_TaiKhoan2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cb_TaiKhoan2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Nhân viên" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Mật Khẩu:");

        pw_MatKhauNV1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("Nhập Lại Mật Khẩu:");

        pw_MatKhauNV2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        btn_TaoTK.setText("Tạo tài khoản");
        btn_TaoTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_TaoTKMouseClicked(evt);
            }
        });

        btn_LamMoiTK.setText("Làm Mới");
        btn_LamMoiTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_LamMoiTKMouseClicked(evt);
            }
        });

        cb_TaiKhoan1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        btn_XoaTK.setText("Xoá tài khoản");
        btn_XoaTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_XoaTKMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pw_MatKhauNV2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txt_TenDangNhap)
                                        .addComponent(pw_MatKhauNV1)
                                        .addComponent(cb_TaiKhoan1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cb_TaiKhoan2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(42, 42, 42))))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btn_XoaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_TaoTK, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_LamMoiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_TenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb_TaiKhoan1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cb_TaiKhoan2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel6))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pw_MatKhauNV1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(pw_MatKhauNV2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_TaoTK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_LamMoiTK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_XoaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
        );

        btn_DoiMK.setText("Đổi Mật Khẩu");
        btn_DoiMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_DoiMKMouseClicked(evt);
            }
        });

        btn_HuyKichHoatDMK.setText("Huỷ kích hoạt");
        btn_HuyKichHoatDMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_HuyKichHoatDMKMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Đổi mật khẩu");

        btn_KichHoatDMK.setText("Kích hoạt");
        btn_KichHoatDMK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_KichHoatDMKMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Mật khẩu mới:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel13.setText("Nhập Lại Mật Khẩu:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel15.setText("Tên Đăng Nhập:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btn_DoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_KichHoatDMK, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_HuyKichHoatDMK, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pw_MatKhauDMK1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pw_MatKhauDMK2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_TenDangNhapDMK, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_TenDangNhapDMK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(pw_MatKhauDMK1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(pw_MatKhauDMK2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_DoiMK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_KichHoatDMK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_HuyKichHoatDMK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tb_TaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số CMND", "NHÂN VIÊN", "TÊN ĐĂNG NHẬP", "VAI TRÒ", "TRẠNG THÁI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tb_TaiKhoan);

        javax.swing.GroupLayout pnTaiKhoanLayout = new javax.swing.GroupLayout(pnTaiKhoan);
        pnTaiKhoan.setLayout(pnTaiKhoanLayout);
        pnTaiKhoanLayout.setHorizontalGroup(
            pnTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                .addGroup(pnTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                        .addGap(400, 400, 400)
                        .addComponent(lb_QLTK))
                    .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        pnTaiKhoanLayout.setVerticalGroup(
            pnTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_QLTK)
                .addGap(18, 18, 18)
                .addGroup(pnTaiKhoanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnTaiKhoanLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tài Khoản", pnTaiKhoan);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("QUẢN LÝ LOẠI DỊCH VỤ VÀ DỊCH VỤ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel16.setText("Tên:");

        cbLuaChonKhoiTaoDV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dịch vụ", "Loại dịch vụ" }));
        cbLuaChonKhoiTaoDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLuaChonKhoiTaoDVActionPerformed(evt);
            }
        });

        txt_TenDV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_TenDVKeyTyped(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel18.setText("Loại dịch vụ:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel19.setText("Lựa chọn :");

        cbNhomDV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel20.setText("Giá :");

        txt_GiaDV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_GiaDVKeyTyped(evt);
            }
        });

        tbDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDVMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbDV);

        btnThemDV.setText("Thêm dịch vụ");
        btnThemDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThemDVMouseClicked(evt);
            }
        });

        btnSuaDV.setText("Cập nhật");
        btnSuaDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuaDVMouseClicked(evt);
            }
        });

        btnLamMoiDV.setText("Làm mới");
        btnLamMoiDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiDVMouseClicked(evt);
            }
        });

        lb_HinhAnh.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lb_HinhAnh.setText("Hình ảnh:");

        btn_ChonAnh.setText("Chọn ảnh");
        btn_ChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ChonAnhActionPerformed(evt);
            }
        });

        lb_Hinh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_Hinh.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        lb_DangHoatDong.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lb_DangHoatDong.setText("Đang hoạt động: ");

        buttonGroup1.add(rb_CoHoatDong);
        rb_CoHoatDong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb_CoHoatDong.setText("Có");

        buttonGroup1.add(rb_KhongHoatDong);
        rb_KhongHoatDong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb_KhongHoatDong.setText("Không");

        btn_XoaDV.setText("Xóa");
        btn_XoaDV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_XoaDVMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnDichVuLayout = new javax.swing.GroupLayout(pnDichVu);
        pnDichVu.setLayout(pnDichVuLayout);
        pnDichVuLayout.setHorizontalGroup(
            pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDichVuLayout.createSequentialGroup()
                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDichVuLayout.createSequentialGroup()
                        .addGap(221, 221, 221)
                        .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(lb_HinhAnh)
                            .addComponent(lb_DangHoatDong))
                        .addGap(23, 23, 23)
                        .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnDichVuLayout.createSequentialGroup()
                                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_TenDV)
                                    .addComponent(cbNhomDV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbLuaChonKhoiTaoDV, 0, 311, Short.MAX_VALUE)
                                    .addComponent(txt_GiaDV)
                                    .addGroup(pnDichVuLayout.createSequentialGroup()
                                        .addComponent(txt_HinhAnhDV, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btn_ChonAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lb_Hinh, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSuaDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnThemDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLamMoiDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_XoaDV, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pnDichVuLayout.createSequentialGroup()
                                .addComponent(rb_CoHoatDong)
                                .addGap(68, 68, 68)
                                .addComponent(rb_KhongHoatDong))))
                    .addGroup(pnDichVuLayout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jLabel1))
                    .addGroup(pnDichVuLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1097, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(191, Short.MAX_VALUE))
        );
        pnDichVuLayout.setVerticalGroup(
            pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDichVuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDichVuLayout.createSequentialGroup()
                        .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbLuaChonKhoiTaoDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(btnThemDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_TenDV, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(btnSuaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnDichVuLayout.createSequentialGroup()
                                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbNhomDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(txt_GiaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lb_HinhAnh)
                                    .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txt_HinhAnhDV, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btn_ChonAnh))))
                            .addGroup(pnDichVuLayout.createSequentialGroup()
                                .addComponent(btn_XoaDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnLamMoiDV, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rb_KhongHoatDong)
                            .addGroup(pnDichVuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lb_DangHoatDong)
                                .addComponent(rb_CoHoatDong))))
                    .addComponent(lb_Hinh, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dịch Vụ", pnDichVu);

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel36.setText("THỐNG KÊ DOANH THU");

        date_BD.setCalendarPreferredSize(new java.awt.Dimension(400, 300));
        date_BD.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16));
        date_BD.setLocale(new java.util.Locale("en", "GB", ""));

        date_KT.setCalendarPreferredSize(new java.awt.Dimension(400, 300));
        date_KT.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16));
        date_KT.setLocale(new java.util.Locale("en", "GB", ""));

        btn_ThongKe.setText("OK");
        btn_ThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ThongKeMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("Từ:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel24.setText("Đến:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Thống kê xu hướng");

        cbNhomDV_ThongKe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        cbNhomDV_ThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNhomDV_ThongKeActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("Tổng doanh thu:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel14.setText("Tổng chiết khấu:");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel22.setText("Tổng lượt khách:");

        txt_TongLuotKhach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txt_TongChietKhau.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txt_TongChietKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_TongChietKhauActionPerformed(evt);
            }
        });

        txt_TongDoanhThu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(txt_TongLuotKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txt_TongDoanhThu)
                    .addComponent(txt_TongChietKhau))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_TongDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt_TongChietKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txt_TongLuotKhach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        cb_ThoiGian.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Cả năm", "Quý 1", "Quý 2", "Quý 3", "Quý 4" }));
        cb_ThoiGian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_ThoiGianActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cb_ThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbNhomDV_ThongKe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(date_BD, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel24)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(date_KT, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(btn_ThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(date_BD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(date_KT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btn_ThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNhomDV_ThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_ThoiGian, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jpanel_ThongKeLayout = new javax.swing.GroupLayout(jpanel_ThongKe);
        jpanel_ThongKe.setLayout(jpanel_ThongKeLayout);
        jpanel_ThongKeLayout.setHorizontalGroup(
            jpanel_ThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 399, Short.MAX_VALUE)
        );
        jpanel_ThongKeLayout.setVerticalGroup(
            jpanel_ThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel_XuHuongLayout = new javax.swing.GroupLayout(jPanel_XuHuong);
        jPanel_XuHuong.setLayout(jPanel_XuHuongLayout);
        jPanel_XuHuongLayout.setHorizontalGroup(
            jPanel_XuHuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );
        jPanel_XuHuongLayout.setVerticalGroup(
            jPanel_XuHuongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnThongKeLayout = new javax.swing.GroupLayout(pnThongKe);
        pnThongKe.setLayout(pnThongKeLayout);
        pnThongKeLayout.setHorizontalGroup(
            pnThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongKeLayout.createSequentialGroup()
                .addGroup(pnThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongKeLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addGroup(pnThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpanel_ThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnThongKeLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jPanel_XuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnThongKeLayout.createSequentialGroup()
                        .addGap(586, 586, 586)
                        .addComponent(jLabel36)))
                .addContainerGap(470, Short.MAX_VALUE))
        );
        pnThongKeLayout.setVerticalGroup(
            pnThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnThongKeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel36)
                .addGroup(pnThongKeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnThongKeLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnThongKeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpanel_ThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel_XuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thống Kê", pnThongKe);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1412, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Dịch Vụ");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String chuanHoa(String s) {
        s = s.trim();
        s = s.replaceAll("\\s+", " ");

        String a[] = s.split(" ");
        String kq = "";
        for (String x : a) {
            kq = kq + x.substring(0, 1).toUpperCase() + x.substring(1).toLowerCase();
            kq += " ";
        }
        kq = kq.trim();
        return kq;
    }

    boolean checkFillDV() {
        if (txt_TenDV.getText().trim().equals("") || checkTenDN(txt_TenDV.getText())) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên hoặc tên không hợp lệ, chỉ chứa a-zA-Z0-9");
            return false;
        }
        if (txt_GiaDV.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa điền giá tiền!");
            return false;
        }
        if (txt_HinhAnhDV.getText().equals("")) {
//            JOptionPane.showMessageDialog(this, "Bạn chưa chọn ảnh nè!");
        }
        return true;
    }

    boolean kt_TonTaiDV(String maDV, String tenDV, String maLoaiDV) {
        String sql;
        if (maDV.equals("THEM")) {
            sql = "SELECT * FROM DICHVU WHERE TENDV = N'" + tenDV + "' AND MALOAIDV='" + maLoaiDV + "'";
        } else {
            sql = "SELECT * FROM DICHVU WHERE TENDV = N'" + tenDV + "' AND MALOAIDV='" + maLoaiDV + "' AND MADV<>'" + maDV + "'";
        }

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.err.println("Loi kt dv");
        }

        return false;
    }

    int laySoLuong(String bang) {
        int sl = 0;

        try {
            CallableStatement s = ketNoi.prepareCall("{call LAY_MA (?)}");
            s.setString(1, bang);
            ResultSet rs = s.executeQuery();
            while (rs.next()) {
                sl = rs.getInt(1);
            }
            rs.close();

        } catch (Exception e) {
            System.out.println("ERR GETSL");
        }
        return sl;
    }

    int laySoLuongDV(String maLoai) {
        int sl = 0;

        try {
            CallableStatement s = ketNoi.prepareCall("{call MA_DICH_VU_MAX (?)}");
            s.setString(1, maLoai);
            ResultSet rs = s.executeQuery();
            while (rs.next()) {
                sl = rs.getInt(1);
            }
            rs.close();

        } catch (Exception e) {
            System.out.println("ERR GETSL");
        }
        return sl;
    }

    String layMaLoaiDV(String tenLoai) {
        String s = "";
        String sql = "SELECT MALOAIDV FROM LOAIDICHVU WHERE TENLOAIDV = N'" + tenLoai + "'";

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                s = rs.getString(1);
            }

            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.out.println("ERR layMaLoaiDV()");
        }
        return s;
    }

    void them_DonGia(String maDV, long DonGia) {
        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
        String sql = "INSERT into DONGIA values (?,?,?)";

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);

            ps.setString(1, maDV);
            ps.setTimestamp(2, timestamp);

            ps.setLong(3, DonGia);
            ps.executeUpdate();

            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi themDonGia()");
        }
    }

    private void btnThemDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThemDVMouseClicked
        // TODO add your handling code here:

        if (cbLuaChonKhoiTaoDV.getSelectedItem().toString().equals("Dịch vụ")) {
            String txt_MaLoai = layMaLoaiDV(cbNhomDV.getSelectedItem().toString());
            if (checkFillDV()) {
                if (!kt_TonTaiDV("THEM", txt_TenDV.getText().trim(), txt_MaLoai)) {
                    int sl = laySoLuongDV(txt_MaLoai) + 1;
                    String sql = "insert into DICHVU values (?,?,?,?,?)";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql);
                        ps.setString(1, txt_MaLoai + sl);
                        ps.setString(2, chuanHoa(txt_TenDV.getText()));
                        ps.setString(3, layMaLoaiDV(cbNhomDV.getSelectedItem().toString()));
                        if (txt_HinhAnhDV.getText().trim().equals("")) {
                            ps.setString(4, "NO PICTURE");
                        } else {
                            ps.setString(4, txt_HinhAnhDV.getText());
                        }
                        if (rb_KhongHoatDong.isSelected()) {
                            ps.setBoolean(5, false);
                        } else {
                            ps.setBoolean(5, true);
                        }
                        ps.executeUpdate();
                        them_DonGia(txt_MaLoai + sl, Long.valueOf(txt_GiaDV.getText()));
                        JOptionPane.showMessageDialog(this, "Thêm thành công!");
                        loadDV();
                        txt_TenDV.setText("");
                        txt_GiaDV.setText("");
                        txt_HinhAnhDV.setText("");
                        rb_CoHoatDong.setSelected(true);

                        ps.close();
                    } catch (Exception ex) {
                        System.out.println("ERR Themdv()");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Dịch vụ đã tồn tại");
                }
                btnSuaDV.setEnabled(false);
            }
        } else {
            btn_ChonAnh.setVisible(false);
            lb_Hinh.setVisible(false);
            if (txt_TenDV.getText().trim().equals("") || kt_TonTaiLoaiDV("THEM", txt_TenDV.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên loại dịch vụ hoặc loại dịch vụ này đã tồn tại!");
                return;
            } else {
                int sl = laySoLuong("LOAIDICHVU") + 1;
                String sql = "insert into LOAIDICHVU values (?,?,?)";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, "LOAI" + sl);
                    ps.setString(2, chuanHoa(txt_TenDV.getText()));
                    if (rb_KhongHoatDong.isSelected()) {
                        ps.setBoolean(3, false);
                    } else {
                        ps.setBoolean(3, true);
                    }
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Thêm thành công!");
                    txt_TenDV.setText("");
                    loadLoaiDV();

                    ps.close();
//                    ketNoi.close();
                } catch (Exception ex) {
                    System.out.println("ERR Themloaidv()");
                }
            }
        }
    }//GEN-LAST:event_btnThemDVMouseClicked

    boolean kt_TonTaiLoaiDV(String maLoaiDV, String tenDV) {
        String sql;
        if (maLoaiDV.equals("THEM")) {
            sql = "SELECT * FROM LOAIDICHVU WHERE TENLOAIDV = N'" + tenDV + "'";
        } else {
            sql = "SELECT * FROM LOAIDICHVU WHERE TENLOAIDV = N'" + tenDV + "' AND MALOAIDV<>'" + maLoaiDV + "'";
        }

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.err.println("Loi kt loai dv");
        }

        return false;
    }

    void xoaTrangNV() {
        txt_TenNV.setText("");
        txt_CMND.setText("");
        txt_SoDTNV.setText("");
        txt_NgaySinhNV.setText("");
        txt_DiaChiNV.setText("");
        txt_CMND.setText("");
        gtbGioiTinhNhanVien.clearSelection();

        btn_SuaNV.setEnabled(false); //1401
        btn_KichHoat.setEnabled(false);
        btn_HuyKichHoat.setEnabled(false);

        lb_Loi0.setVisible(false);
        lb_Loi1.setVisible(false);
        lb_Loi2.setVisible(false);
        lb_Loi3.setVisible(false);
        lb_Loi4.setVisible(false);
        lb_Loi5.setVisible(false);
    }
    private void btn_DatLaiNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_DatLaiNVMouseClicked
        // TODO add your handling code here:
        xoaTrangNV();
    }//GEN-LAST:event_btn_DatLaiNVMouseClicked
    boolean checkTT_TaiKhoan(String maNV) {

        try {
            String sql = "select * from taikhoan where manv ='" + maNV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error checkTT_TaiKhoan()");
        }
        return false;
    }

    boolean checkTrangThai(String maNV) {

        try {
            String sql = "select TRANGTHAI from taikhoan where manv ='" + maNV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String t = rs.getString(1);
                if (t.equals("1")) {
                    return true;
                } else {
                    return false;
                }
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error checkTrangThai()");
        }
        return true;
    }

    boolean checkTrangThaiTDN(String tenDangNhap) {

        try {
            String sql = "select TRANGTHAI from taikhoan where tendangnhap ='" + tenDangNhap + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String t = rs.getString(1);
                if (t.equals("1")) {
                    return true;
                } else {
                    return false;
                }
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error checkTrangThai()");
        }
        return true;
    }
    private void tbDanhSachNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhSachNhanVienMouseClicked
        // TODO add your handling code here:
        btn_SuaNV.setEnabled(true);
        btn_HuyKichHoat.setEnabled(false);
        btn_KichHoat.setEnabled(false);

        dtm = (DefaultTableModel) tbDanhSachNhanVien.getModel();

        int j = tbDanhSachNhanVien.getSelectedRow();

        int i = tbDanhSachNhanVien.convertRowIndexToModel(j);

        this.maNV = dtm.getValueAt(i, 0).toString();
        if (checkTT_TaiKhoan(this.maNV)) {
            if (checkTrangThai(this.maNV) && !kiemTraVaiTro(maNV)) {
                btn_HuyKichHoat.setEnabled(true);
                btn_KichHoat.setEnabled(false);
            } else if (!kiemTraVaiTro(maNV)) {
                btn_KichHoat.setEnabled(true);
                btn_HuyKichHoat.setEnabled(false);
            }

        }
        txt_TenNV.setText(dtm.getValueAt(i, 2).toString()); //Dòng i cột 0
        txt_CMND.setText(dtm.getValueAt(i, 1).toString()); //Dòng i cột 1
        txt_SoDTNV.setText(dtm.getValueAt(i, 5).toString()); //Dòng i cột 1
        txt_NgaySinhNV.setText(dtm.getValueAt(i, 3).toString()); //Dòng i cột 
        txt_DiaChiNV.setText(dtm.getValueAt(i, 6).toString()); //Dòng i cột 
        if (dtm.getValueAt(i, 4).toString().equals("Nam")) {
            rb_NamNV.setSelected(true);
        } else {
            rb_NuNV.setSelected(true);
        }
    }//GEN-LAST:event_tbDanhSachNhanVienMouseClicked

    private void txt_TenNVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TenNVKeyTyped
        // TODO add your handling code here:
        try {
            dtm = (DefaultTableModel) tbDanhSachNhanVien.getModel();
            dtm.setNumRows(0);
            String s = txt_TenNV.getText();
            s = s + evt.getKeyChar();
            s = s.trim();
            String sql = "SELECT * FROM Nhanvien where ten like N'%" + s + "%'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getString(3));
                data.add(chuyenNgay(rs.getString(7)));
                data.add(rs.getString(5));
                data.add(rs.getString(4));
                data.add(rs.getString(6));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi txt_TenNVKeyTyped()");
        }

    }//GEN-LAST:event_txt_TenNVKeyTyped

    private void btn_TimKiemNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TimKiemNVMouseClicked
        // TODO add your handling code here:

        if (txt_SoDTNV.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại!");
//            return;
        }
        try {
            dtm = (DefaultTableModel) tbDanhSachNhanVien.getModel();
            dtm.setNumRows(0);
            String s = txt_SoDTNV.getText();
            s = s.trim();
            String sql = "SELECT * FROM dbo.NHANVIEN WHERE SDT like '%" + s + "%'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getString(3));
                data.add(chuyenNgay(rs.getString(7)));
                data.add(rs.getString(5));
                data.add(rs.getString(4));
                data.add(rs.getString(6));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi btn_TimKiemNVMouseClicked()");
        }

    }//GEN-LAST:event_btn_TimKiemNVMouseClicked
    boolean checkSDT(String sdt) {
        String pSDT = "0[0-9]{9}";
        if (!sdt.matches(pSDT)) {
            return false;
        }
        return true;
    }

    String checkDate(String d) {
        String pattern = "(0?[1-9]|[1-2]\\d|3[0-1])/(0?[1-9]|1[0-2])/(19|20)\\d{2}";
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat f1 = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        if (!d.matches(pattern)) {
            return "1";
        } else {
            f.setLenient(false);
            try {
                date = f.parse(d);
                return f1.format(date);
            } catch (ParseException e) {
                System.out.println("Error fDate!");
                JOptionPane.showMessageDialog(this, "Date not valid");
            }
            return "1";
        }
    }

    String ma_Hoa_MK(String s) {
        String sql = "SELECT CONVERT(VARCHAR(32), HashBytes('MD5','" + s + "' ), 2) as md5";

        try {
            PreparedStatement p = ketNoi.prepareStatement(sql);
            ResultSet m = p.executeQuery();
            while (m.next()) {
                s = m.getString(1);
            }
            m.close();
            p.close();
        } catch (SQLException e) {
            System.err.println("Loi ma hoa mk");
        }
        return s;
    }

    String chuyenNgay(String d) {
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat f1 = new SimpleDateFormat("yyyy-MM-dd");
        Date date = new Date();
        f1.setLenient(false);
        try {
            date = f1.parse(d);
            return f.format(date);

        } catch (ParseException ex) {
            Logger.getLogger(ADMIN.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    String chuyenNgayGio(String d) {
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        SimpleDateFormat f1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date date = new Date();
        f1.setLenient(false);
        try {
            date = f1.parse(d);
            return f.format(date);

        } catch (ParseException ex) {
            Logger.getLogger(ADMIN.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    String chuyenNgayGio2(String d) {
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        SimpleDateFormat f1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date date = new Date();
        f.setLenient(false);
        try {
            date = f.parse(d);
            return f1.format(date);

        } catch (ParseException ex) {
            Logger.getLogger(ADMIN.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private boolean checkTT_CMND(String cmnd) {
        try {
            cmnd = cmnd.trim();

            String sql = "SELECT * FROM dbo.NHANVIEN WHERE CMND='" + cmnd + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkTT_CMND()");
        }
        return false;
    }

    private boolean checkTT_SDT(String sdt) {
        try {

            String sql = "SELECT * FROM dbo.NHANVIEN WHERE SDT='" + sdt.trim() + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkTT_SDT()");
        }
        return false;
    }

    private boolean checkFill() {
        boolean kt = true;
        if ("".equals(txt_TenNV.getText())) {
            lb_Loi0.setVisible(true);
            kt = false;
        } else {
            lb_Loi0.setVisible(false);
        }
        if ("".equals(txt_CMND.getText()) || !checkCMND(txt_CMND.getText())) {
            lb_Loi5.setVisible(true);
            kt = false;
        } else {
            lb_Loi5.setVisible(false);
            if (checkTT_CMND(txt_CMND.getText())) {
                JOptionPane.showMessageDialog(this, "Số CMND đã tồn tại");
                lb_Loi5.setVisible(true);
                kt = false;
            } else {
                lb_Loi5.setVisible(false);
            }
        }
        if ("".equals(txt_SoDTNV.getText()) || !checkSDT(txt_SoDTNV.getText())) {
            lb_Loi1.setVisible(true);
            kt = false;
        } else {
            if (checkTT_SDT(txt_SoDTNV.getText())) {
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại");
                lb_Loi1.setVisible(true);
                kt = false;
            } else {
                lb_Loi1.setVisible(false);
            }
        }

        if ("1".equals(checkDate(txt_NgaySinhNV.getText()))) {
            lb_Loi2.setVisible(true);
            kt = false;
        } else {
            lb_Loi2.setVisible(false);
        }
        if ("".equals(txt_DiaChiNV.getText())) {
            lb_Loi3.setVisible(true);
            kt = false;
        } else {
            lb_Loi3.setVisible(false);
        }
        if (!rb_NamNV.isSelected() && !rb_NuNV.isSelected()) {
            lb_Loi4.setVisible(true);
            kt = false;
        } else {
            lb_Loi4.setVisible(false);
        }
        return kt;
    }

    boolean checkCMND(String cmnd) {
        String pCMND = "[0-9]{9}";
        if (!cmnd.matches(pCMND)) {
            return false;
        }
        return true;
    }

    private void btn_ThemNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemNVMouseClicked
        // TODO add your handling code here:

        if (checkFill()) {
            int sl = laySoLuong("NHANVIEN");

            String sql = "insert into NHANVIEN values (?,?,?,?,?,?,?)";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, "NV" + (sl + 1));
                ps.setString(2, txt_CMND.getText());
                ps.setString(3, chuanHoa(txt_TenNV.getText()));
                ps.setString(4, txt_SoDTNV.getText());
                ps.setString(5, rb_NamNV.isSelected() ? "Nam" : "Nữ");
                ps.setString(6, txt_DiaChiNV.getText());
                ps.setString(7, checkDate(txt_NgaySinhNV.getText()));
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Thêm thành công!");
                loadNV();
                xoaTrangNV();
                loadCBTaiKhoan1TTK();
                ps.close();
//                ketNoi.close();
            } catch (Exception ex) {
                System.out.println("ERR ThemNV()");
            }
        }
        btn_SuaNV.setEnabled(false); //1401
        btn_HuyKichHoat.setEnabled(false);
    }//GEN-LAST:event_btn_ThemNVMouseClicked
    private boolean check_CMND_CapNhat(String cmnd) {
        try {
            cmnd = cmnd.trim();

            String sql = "SELECT * FROM NHANVIEN WHERE CMND='" + cmnd + "' and manv != '" + maNV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkTT_SDTKH()");
        }
        return false;
    }

    private boolean check_SDT_CapNhat(String sdt) {
        try {

            String sql = "SELECT * FROM NHANVIEN WHERE SDT='" + sdt.trim() + "' and manv != '" + maNV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkTT_SDT_cAPnHAT()");
        }
        return false;
    }
    private void btn_SuaNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_SuaNVMouseClicked
        // TODO add your handling code here:

        if (btn_SuaNV.isEnabled()) {
            boolean kt = true;
            if ("".equals(txt_TenNV.getText())) {
                lb_Loi0.setVisible(true);
                kt = false;
            } else {
                lb_Loi0.setVisible(false);
            }
            if ("".equals(txt_CMND.getText()) || !checkCMND(txt_CMND.getText())) {
                lb_Loi5.setVisible(true);
                kt = false;
            } else {
                lb_Loi5.setVisible(false);
                if (check_CMND_CapNhat(txt_CMND.getText())) {
                    JOptionPane.showMessageDialog(this, "Số CMND trùng với nhân viên khác");
                    lb_Loi5.setVisible(true);
                    kt = false;
                } else {
                    lb_Loi5.setVisible(false);
                }
            }
            if ("".equals(txt_SoDTNV.getText()) || !checkSDT(txt_SoDTNV.getText())) {
                lb_Loi1.setVisible(true);
                kt = false;
            } else {
                if (check_SDT_CapNhat(txt_SoDTNV.getText())) {
                    JOptionPane.showMessageDialog(this, "Số điện thoại trùng với nhân viên khác");
                    lb_Loi1.setVisible(true);
                    kt = false;
                } else {
                    lb_Loi1.setVisible(false);
                }
            }

            if ("1".equals(checkDate(txt_NgaySinhNV.getText()))) {
                lb_Loi2.setVisible(true);
                kt = false;
            } else {
                lb_Loi2.setVisible(false);
            }
            if ("".equals(txt_DiaChiNV.getText())) {
                lb_Loi3.setVisible(true);
                kt = false;
            } else {
                lb_Loi3.setVisible(false);
            }
            if (!rb_NamNV.isSelected() && !rb_NuNV.isSelected()) {
                lb_Loi4.setVisible(true);
                kt = false;
            } else {
                lb_Loi4.setVisible(false);
            }
            if (kt == false) {
                return;
            }

            Connection kn = KNCSDL.layKetNoi();

            String sql = "update [nhanvien] set cmnd=?,ten=?,sdt=?,gioitinh=?,diachi=?,ngaysinh=? where manv=?";
            int i = JOptionPane.showConfirmDialog(this, "Bạn muốn cập nhật không?", "Xác nhận cập nhật", 0);
            if (i == JOptionPane.YES_OPTION) {
                try {
                    PreparedStatement ps = kn.prepareStatement(sql);
                    ps.setString(1, txt_CMND.getText());
                    ps.setString(2, chuanHoa(txt_TenNV.getText()));
                    ps.setString(3, txt_SoDTNV.getText());
                    ps.setString(4, rb_NamNV.isSelected() ? "Nam" : "Nữ");
                    ps.setString(5, txt_DiaChiNV.getText());
                    ps.setString(6, checkDate(txt_NgaySinhNV.getText()));
                    ps.setString(7, this.maNV);
                    ps.executeUpdate();
                    kn.close();
                    JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!!");
                    loadNV();
                    xoaTrangNV();

                    ps.close();
                    kn.close();
                } catch (SQLException e) {
                    System.out.println("ERROR Capnhatthongtin()");
                }
            }
            btn_SuaNV.setEnabled(false); //1401
            btn_HuyKichHoat.setEnabled(false);
        }

    }//GEN-LAST:event_btn_SuaNVMouseClicked

    private boolean kiemTraVaiTro(String maNV) {

        String sql = "select vaitro from taikhoan where manv ='" + maNV + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String x = rs.getString(1);
                if (x.equals("1")) {
                    return true;
                } else {
                    return false;
                }//
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error kiemTraVaiTro()");
        }
        return false;
    }
    private void btn_HuyKichHoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_HuyKichHoatMouseClicked
        // TODO add your handling code here:
        if (btn_HuyKichHoat.isEnabled()) {
            if (kiemTraVaiTro(maNV)) {
                JOptionPane.showMessageDialog(this, "Tài khoản QUẢN LÝ không thể hủy kích hoạt !");
                return;
            }
            Connection kn = KNCSDL.layKetNoi();
            String sql = "update [taikhoan] set trangthai=? where manv=?";
            try {
                PreparedStatement ps = kn.prepareStatement(sql);
                ps.setString(1, "0");
                ps.setString(2, this.maNV);
                ps.executeUpdate();
                kn.close();
                JOptionPane.showMessageDialog(this, "Huỷ kích hoạt thành công!!");
                loadNV();
                xoaTrangNV();

                ps.close();
                kn.close();
            } catch (SQLException e) {
                System.out.println("ERROR Capnhatthongtin()");
            }
            btn_SuaNV.setEnabled(false); //1401
            btn_KichHoat.setEnabled(false);
            btn_HuyKichHoat.setEnabled(false);
        }

    }//GEN-LAST:event_btn_HuyKichHoatMouseClicked

    private void btn_KichHoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_KichHoatMouseClicked
        // TODO add your handling code here: Connection kn = KNCSDL.layKetNoi();
        if (btn_KichHoat.isEnabled()) {
            Connection kn = KNCSDL.layKetNoi();
            String sql = "update [taikhoan] set trangthai=? where manv=?";
            try {
                PreparedStatement ps = kn.prepareStatement(sql);
                ps.setString(1, "1");
                ps.setString(2, this.maNV);
                ps.executeUpdate();
                kn.close();
                JOptionPane.showMessageDialog(this, "Kích hoạt thành công!!");
                loadNV();
                xoaTrangNV();

                ps.close();
                kn.close();
            } catch (SQLException e) {
                System.out.println("ERROR Capnhatthongtin()");
            }
            btn_SuaNV.setEnabled(false); //1401
            btn_KichHoat.setEnabled(false);
            btn_HuyKichHoat.setEnabled(false);
        }
    }//GEN-LAST:event_btn_KichHoatMouseClicked

    private void btn_TimKiemKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TimKiemKHMouseClicked
        // TODO add your handling code here:
        if (txt_SoDTKH.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập số điện thoại!");
//            return;
        }
        try {
            dtm = (DefaultTableModel) tbDanhSachKhachHang.getModel();
            dtm.setNumRows(0);
            String s = txt_SoDTKH.getText();
            s = s.trim();

            String sql = "SELECT * FROM dbo.KHACHHANG WHERE SDT like '%" + s + "%'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getString(3));
                data.add(rs.getString(4));
                data.add(rs.getString(5));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi btn_TimKiemKHMouseClicked()");
        }
    }//GEN-LAST:event_btn_TimKiemKHMouseClicked

    private void txt_TenKHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TenKHKeyTyped
        // TODO add your handling code here:
        try {
            dtm = (DefaultTableModel) tbDanhSachKhachHang.getModel();
            dtm.setNumRows(0);
            String s = txt_TenKH.getText();
            s = s + evt.getKeyChar();
            s = s.trim();

            String sql = "SELECT * FROM KHACHHANG where ten like N'%" + s + "%'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getString(3));
                data.add(rs.getString(4));
                data.add(rs.getString(5));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi txt_TenKHKeyTyped()");
        }
    }//GEN-LAST:event_txt_TenKHKeyTyped
    boolean checkFillKH(String sdt) {
        boolean kt = true;
        if (txt_SoDTKH.getText().equals("")) {
            loi_KH1.setVisible(true);
            kt = false;
        }
        if (txt_TenKH.getText().equals("")) {
            loi_KH2.setVisible(true);
            kt = false;
        }
        return kt;
    }

    private boolean checkTT_SDTKH(String sdt) {
        try {
            sdt = sdt.trim();

            String sql = "SELECT * FROM dbo.KHACHHANG WHERE sdt='" + sdt + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkTT_SDTKH()");
        }
        return false;
    }

    void xoaTrangKH() {
        txt_SoDTKH.setText("");
        txt_TenKH.setText("");
        txt_DiaChiKH.setText("");
        txt_DiemTL.setText("");
        loi_KH1.setVisible(false);
        loi_KH2.setVisible(false);
        loi_KH3.setVisible(false);
    }

    void xoaTrangHD() {
        txt_HoaDonKH.setText("");
        txt_HoaDonMa.setText("");
        dtm = (DefaultTableModel) tbCTHoaDon.getModel();
        dtm.setNumRows(0);
    }
    private void btn_ThemKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemKHMouseClicked
        // TODO add your handling code here:

        if (checkFillKH(txt_SoDTKH.getText().trim())) {

            if (checkTT_SDTKH(txt_SoDTKH.getText().trim())) {
                loi_KH1.setVisible(true);
                JOptionPane.showMessageDialog(this, "Số điện thoại đã tồn tại!");
                return;
            }
            int sl = laySoLuong("KHACHHANG");
            String sql = "insert into KHACHHANG values (?,?,?,?,?)";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, "KH" + (sl + 1));
                ps.setString(2, txt_SoDTKH.getText());
                ps.setString(3, chuanHoa(txt_TenKH.getText()));
                ps.setString(4, txt_DiaChiKH.getText());
                int diem = 0;
                ps.setInt(5, diem);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Thêm khách hàng thành công!");
                xoaTrangKH();
                loadKH();

                ps.close();
//                ketNoi.close();
            } catch (Exception ex) {
                System.out.println("ERR ThemKH()");
            }
        }
    }//GEN-LAST:event_btn_ThemKHMouseClicked

    private void tbDanhSachKhachHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDanhSachKhachHangMouseClicked
        // TODO add your handling code here:.
        loi_KH1.setVisible(false);
        btnSuaKH.setEnabled(true);

        int j = tbDanhSachKhachHang.getSelectedRow();

        int i = tbDanhSachKhachHang.convertRowIndexToModel(j);

        this.maKH = dtm.getValueAt(i, 0).toString();
        dtm = (DefaultTableModel) tbDanhSachKhachHang.getModel();
        txt_SoDTKH.setText(dtm.getValueAt(i, 1).toString()); //Dòng i cột 0
        txt_TenKH.setText(dtm.getValueAt(i, 2).toString()); //Dòng i cột 1
        txt_DiaChiKH.setText(dtm.getValueAt(i, 3).toString()); //Dòng i cột 1
        txt_DiemTL.setText(dtm.getValueAt(i, 4).toString()); //Dòng i cột 
    }//GEN-LAST:event_tbDanhSachKhachHangMouseClicked

    private boolean check_SDTKH_CapNhat(String sdt) {
        try {
            sdt = sdt.trim();

            String sql = "SELECT * FROM dbo.KHACHHANG WHERE sdt='" + sdt + "' and makh != '" + maKH + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkTT_SDTKH()");
        }
        return false;
    }
    private void btnSuaKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaKHMouseClicked
        // TODO add your handling code here:
        if (btnSuaKH.isEnabled()) {
            if (checkFillKH(txt_SoDTKH.getText().trim())) {
                if (check_SDTKH_CapNhat(txt_SoDTKH.getText().trim())) {
                    loi_KH1.setVisible(true);
                    JOptionPane.showMessageDialog(this, "Số điện thoại trùng với khách hàng khác!");
                    return;
                }
                String sql = "update [KHACHHANG] set ten=?, diachi=?,sdt=? where makh = ? ";
                int i = JOptionPane.showConfirmDialog(this, "Bạn muốn cập nhật không?", "Xác nhận cập nhật", 0);
                if (i == JOptionPane.YES_OPTION) {
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql);
                        ps.setString(1, chuanHoa(txt_TenKH.getText()));
                        ps.setString(2, txt_DiaChiKH.getText());
                        ps.setString(3, txt_SoDTKH.getText());
                        ps.setString(4, maKH);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!!");
                        xoaTrangKH();
                        loadKH();
                        ps.close();
                    } catch (SQLException e) {
                        System.out.println("ERROR Capnhatthongtin()");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSuaKHMouseClicked

    private void btn_XoaKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaKHMouseClicked
        // TODO add your handling code here:
        loi_KH1.setVisible(false);
        if (txt_SoDTKH.getText().trim().equals("")) {
            loi_KH1.setVisible(true);
            JOptionPane.showMessageDialog(this, "Hãy nhập số điện thoại!");
            return;
        }
        if (!checkTT_SDTKH(txt_SoDTKH.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không tồn tại!");
            return;
        }
        int i = JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xoá " + txt_TenKH.getText().trim() + " hay không", "Xác nhận xoá tài khoản", 0);
        if (i == JOptionPane.YES_OPTION) {

            String sql = "delete from KHACHHANG where SDT = ?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, txt_SoDTKH.getText().trim());
//            System.out.println("txt_SoDTKH.getText().trim()" + txt_SoDTKH.getText().trim());
                ps.executeUpdate();
                xoaTrangKH();
                JOptionPane.showMessageDialog(this, "Xoá khách hàng thành công!");
                loadKH();

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Khách hàng hiện tại đã có hoá đơn trong hệ thống!");
            }
        }

    }//GEN-LAST:event_btn_XoaKHMouseClicked
    void loadCBTaiKhoan1TTK() {
        cb_TaiKhoan1.removeAllItems();

        String sql = "(select  MANV from NHANVIEN) except (select manv from TAIKHOAN)";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                cb_TaiKhoan1.addItem(rs.getString(1));
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.out.println("loadCBTaiKhoan1TTK()");
        }
    }

    private void btn_LamMoiTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_LamMoiTKMouseClicked
        // TODO add your handling code here:
        txt_TenDangNhap.setText("");
        pw_MatKhauNV1.setText("");
        pw_MatKhauNV2.setText("");
        loadCBTaiKhoan1TTK();
    }//GEN-LAST:event_btn_LamMoiTKMouseClicked
    boolean checkTT_TenDangNhap(String tenDangNhap) {
        Connection kn = KNCSDL.layKetNoi();
        try {
            String sql = "SELECT * FROM dbo.TAIKHOAN WHERE TENDANGNHAP='" + tenDangNhap + "'";
            PreparedStatement ps = kn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();
            kn.close();
        } catch (SQLException e) {
            System.err.println("checkTT_TenDangNhap");
        }
        return false;
    }

    boolean checkTenDN(String s) {
        String pattern = "[a-zA-Z0-9]";
        if (!s.matches(pattern)) {
            return false;
        }
        return true;
    }

    boolean checkMK(String s) {
        String pattern = "^[a-zA-Z0-9+!@#$%^&*()_-]+$";
        if (!s.matches(pattern)) {
            return false;
        }
        return true;
    }

    boolean checkFillTTK() {
        if (txt_TenDangNhap.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tên đăng nhập!");
            return false;
        }
        if (checkTenDN(txt_TenDangNhap.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Tên đăng nhập chỉ chứa các kí tự a-z A-Z 0-9");
            return false;
        }
        if (checkTT_TenDangNhap(txt_TenDangNhap.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Tên đăng nhập đã tồn tại");
            return false;
        }
        if (cb_TaiKhoan1.getSelectedIndex() == -1 || cb_TaiKhoan2.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn mã nhân viên hoặc chưa chọn vai trò");
            return false;
        }
        if (String.valueOf(pw_MatKhauNV1.getPassword()).equals("") || String.valueOf(pw_MatKhauNV2.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa điền mật khẩu");
            return false;
        }
        if (!checkMK(String.valueOf(pw_MatKhauNV1.getPassword())) || !checkMK(String.valueOf(pw_MatKhauNV2.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Mật khẩu chỉ được chứa các kí tự a-zA-Z0-9+!@#$%^&*()_-");
            return false;
        }
        if (!String.valueOf(pw_MatKhauNV1.getPassword()).equals(String.valueOf(pw_MatKhauNV2.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Mật khẩu đã nhập không khớp nhau!");
            return false;
        }
        return true;
    }

    void loadDSTaiKhoan() {
        dtm = (DefaultTableModel) tb_TaiKhoan.getModel();
        dtm.setNumRows(0);

        String sql = "SELECT MANV,TENDANGNHAP,VAITRO,TRANGTHAI FROM TAIKHOAN";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(layCMNDNV(rs.getString(1)));
                data.add(layTenNV(rs.getString(1)));
                data.add(rs.getString(2));
                String tmp = "";
                if (rs.getString(3).equals("1")) {
                    tmp = "Quản lý";
                } else {
                    tmp = "Nhân viên";
                }
                data.add(tmp);
                if (rs.getString(4).equals("1")) {
                    tmp = "Đang hoạt động";
                } else {
                    tmp = "Ngừng hoạt động";
                }
                data.add(tmp);
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi loadDSTaiKhoan()");
        }
    }

    private void btn_TaoTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TaoTKMouseClicked
        // TODO add your handling code here:

        if (checkFillTTK()) {
            String sql = "insert into TAIKHOAN values (?,?,?,?,?)";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, txt_TenDangNhap.getText().trim());
                ps.setString(2, ma_Hoa_MK(String.valueOf(pw_MatKhauNV1.getPassword())));
                ps.setBoolean(3, cb_TaiKhoan2.getSelectedItem().toString().equals("Quản lý")); //CHECK2127
                ps.setString(4, cb_TaiKhoan1.getSelectedItem().toString());
                ps.setBoolean(5, true);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Tạo tài khoản thành công!");
                loadNV();
                loadCBTaiKhoan1TTK();

                loadDSTaiKhoan();
                ps.close();
//                ketNoi.close();
            } catch (Exception ex) {
                System.out.println("ERR TaoTAIKHOANNV()");
            }
        }
    }//GEN-LAST:event_btn_TaoTKMouseClicked
    boolean checkFillDMK() {
        if (txt_TenDangNhapDMK.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập tên đăng nhập!");
            return false;
        }
        if (!checkTT_TenDangNhap(txt_TenDangNhapDMK.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Tên đăng nhập không tồn tại");
            return false;
        }
        if (String.valueOf(pw_MatKhauDMK1.getPassword()).equals("") || String.valueOf(pw_MatKhauDMK2.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa nhập mật khẩu");
            return false;
        }
        if (!checkMK(String.valueOf(pw_MatKhauDMK1.getPassword())) || !checkMK(String.valueOf(pw_MatKhauDMK2.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Mật khẩu chỉ được chứa các kí tự a-zA-Z0-9+!@#$%^&*()_-");
            return false;
        }
        if (!String.valueOf(pw_MatKhauDMK1.getPassword()).equals(String.valueOf(pw_MatKhauDMK2.getPassword()))) {
            JOptionPane.showMessageDialog(this, "Mật khẩu đã nhập không khớp nhau!");
            return false;
        }
        return true;
    }


    private void btn_DoiMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_DoiMKMouseClicked
        // TODO add your handling code here:

        if (checkFillDMK()) {
            String sql = "update [taikhoan] set matkhau=? where tendangnhap=?";
            try {
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ps.setString(1, ma_Hoa_MK(String.valueOf(pw_MatKhauDMK1.getPassword())));
                ps.setString(2, txt_TenDangNhapDMK.getText().trim());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Đổi mật khẩu thành công!");
                loadNV();

                ps.close();
//                ketNoi.close();
            } catch (Exception ex) {
                System.out.println("ERR DMKTAIKHOANNV()");
            }
        }
    }//GEN-LAST:event_btn_DoiMKMouseClicked

    private void btn_KichHoatDMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_KichHoatDMKMouseClicked
        // TODO add your handling code here:
        if (checkTT_TenDangNhap(txt_TenDangNhapDMK.getText())) {

            if (checkTrangThaiTDN(txt_TenDangNhapDMK.getText())) {
                JOptionPane.showMessageDialog(this, "Tài khoản bạn đã kích hoạt rồi!");
                return;
            }
            Connection kn = KNCSDL.layKetNoi();
            String sql = "update [taikhoan] set trangthai=? where tendangnhap=?";
            try {
                PreparedStatement ps = kn.prepareStatement(sql);
                ps.setBoolean(1, true);
                ps.setString(2, txt_TenDangNhapDMK.getText());
                ps.executeUpdate();
                kn.close();
                JOptionPane.showMessageDialog(this, "Kích hoạt thành công!!");
                loadDSTaiKhoan();
                ps.close();
                kn.close();
            } catch (SQLException e) {
                System.out.println("ERROR KichHoatDMK()");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tên đăng nhập không tồn tại!");
        }

    }//GEN-LAST:event_btn_KichHoatDMKMouseClicked
    private String layMaNV2(String ten) {

        String sql = "select manv from taikhoan WHERE tendangnhap='" + ten + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getString(1);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error layMaNV2()");
        }
        return null;
    }
    private void btn_HuyKichHoatDMKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_HuyKichHoatDMKMouseClicked
        // TODO add your handling code here:

        if (checkTT_TenDangNhap(txt_TenDangNhapDMK.getText())) {
            if (kiemTraVaiTro(layMaNV2(txt_TenDangNhapDMK.getText()))) {
                JOptionPane.showMessageDialog(this, "Tài khoản QUẢN LÝ không thể hủy kích hoạt !");
                return;
            }
            if (!checkTrangThaiTDN(txt_TenDangNhapDMK.getText())) {
                JOptionPane.showMessageDialog(this, "Tài khoản bạn chưa được kích hoạt !");
                return;
            }

            Connection kn = KNCSDL.layKetNoi();
            String sql = "update [taikhoan] set trangthai=? where tendangnhap=?";
            try {
                PreparedStatement ps = kn.prepareStatement(sql);
                ps.setBoolean(1, false);
                ps.setString(2, txt_TenDangNhapDMK.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Huỷ kích hoạt thành công!!");
                loadDSTaiKhoan();
                ps.close();
                kn.close();
            } catch (SQLException e) {
                System.out.println("ERROR HuyKichHoatDMK()");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tên đăng nhập không tồn tại!");
        }
    }//GEN-LAST:event_btn_HuyKichHoatDMKMouseClicked
    String laySDTQuaMaKH(String maKH) {

        try {
            String sql = "SELECT * FROM Khachhang where makh='" + maKH + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getString(2);
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.err.println("Loi layTenQuaSDT");
        }
        return null;
    }

    private String layTenNV(String maNV) {

        String sql = "select TEN,CMND from dbo.NHANVIEN WHERE MANV='" + maNV + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getString(1);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error kiemTraVaiTro()");
        }
        return null;
    }

    private String layCMNDNV(String maNV) {

        String sql = "select CMND from dbo.NHANVIEN WHERE MANV='" + maNV + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getString(1);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error layCMND()");
        }
        return null;
    }

    private String layMaNV(String ten) {

        String sql = "select manv from dbo.NHANVIEN WHERE ten=N'" + ten + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return rs.getString(1);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Error layMaNV()");
        }
        return null;
    }

    void loadHoaDon() {
        try {
            dtm = (DefaultTableModel) tbHoaDon.getModel();
            dtm.setNumRows(0);
            String sql = "SELECT * FROM dbo.HOADON ORDER BY NGAYLAP DESC";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(chuyenNgayGio(rs.getString(2)));
                data.add(laySDTQuaMaKH(rs.getString(3)));
                data.add(rs.getString(4));
                data.add(chuanHoaTien(rs.getString(5)));
                data.add(layTenNV(rs.getString(6)));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi loadHoaDon()");
        }
    }


    private void txt_HoaDonKHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_HoaDonKHKeyTyped
        // TODO add your handling code here:

        dtm = (DefaultTableModel) tbHoaDon.getModel();
        dtm.setNumRows(0);
        String s = txt_HoaDonKH.getText();
        s = s + evt.getKeyChar();
        s = s.trim();
        String ma;
        try {
            String sql = "SELECT * FROM khachhang where sdt like N'%" + s + "%'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                ma = rs.getString(1);
                String sql2 = "SELECT * FROM HOADON where MAKH='" + ma + "'";
                PreparedStatement ps2 = ketNoi.prepareStatement(sql2);
                ResultSet rs2 = ps2.executeQuery();
                while (rs2.next()) {
                    Vector<Object> data = new Vector<>();
                    data.add(rs2.getString(1));
                    data.add(chuyenNgayGio(rs2.getString(2)));
                    data.add(laySDTQuaMaKH(rs2.getString(3)));
                    data.add(rs2.getString(4));
                    data.add(chuanHoaTien(rs2.getString(5)));
                    data.add(layTenNV(rs2.getString(6)));
                    dtm.addRow(data);
                }
            }

        } catch (Exception e) {
            System.err.println("Loi txt_HoaDonKHKeyTyped()");
        }
        //}

    }//GEN-LAST:event_txt_HoaDonKHKeyTyped

    private void btn_TimKiemHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TimKiemHoaDonMouseClicked
        // TODO add your handling code here:
        if (txt_HoaDonMa.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mã hoá đơn!");
            return;
        }
        try {
            String s = txt_HoaDonMa.getText();
            dtm = (DefaultTableModel) tbHoaDon.getModel();
            dtm.setNumRows(0);
            String sql = "SELECT * FROM HOADON where mahd='" + s + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(chuyenNgayGio(rs.getString(2)));
                data.add(laySDTQuaMaKH(rs.getString(3)));
                data.add(rs.getString(4));
                data.add(chuanHoaTien(rs.getString(5)));
                data.add(layTenNV(rs.getString(6)));
                dtm.addRow(data);
            } else {
                JOptionPane.showMessageDialog(this, "Hoá đơn không tồn tại!");
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi btn_TimKiemHoaDonMouseClicked()");
        }
    }//GEN-LAST:event_btn_TimKiemHoaDonMouseClicked

    private void btn_TimKiemNgayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TimKiemNgayMouseClicked
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(date_HoaDon.getSelectedDate().getTime());
        dtm = (DefaultTableModel) tbHoaDon.getModel();
        dtm.setNumRows(0);
        String sql = "select * from hoadon where  convert(date, NGAYLAP, 120) = '" + date + "' ORDER BY NGAYLAP ASC";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(chuyenNgayGio(rs.getString(2)));
                data.add(laySDTQuaMaKH(rs.getString(3)));
                data.add(rs.getString(4));
                data.add(chuanHoaTien(rs.getString(5)));
                data.add(layTenNV(rs.getString(6)));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();
        } catch (Exception e) {
            System.err.println("Loi btn_TimKiemNgayMouseClicked()");
        }

    }//GEN-LAST:event_btn_TimKiemNgayMouseClicked

    private void cb_HoaDonNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_HoaDonNVActionPerformed
        // TODO add your handling code here:
//        System.out.println("OK: " + cb_HoaDonNV.getSelectedItem().toString());

    }//GEN-LAST:event_cb_HoaDonNVActionPerformed

    private void btn_TimKiemHDNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_TimKiemHDNVMouseClicked
        // TODO add your handling code here:
        Connection kn = KNCSDL.layKetNoi();
        dtm = (DefaultTableModel) tbHoaDon.getModel();
        dtm.setNumRows(0);
//        cb_HoaDonNV.setSelectedItem("");
        String s = layMaNV(cb_HoaDonNV.getSelectedItem().toString());
        String sql = "SELECT * FROM dbo.HOADON WHERE manv='" + s + "'";
        try {
            PreparedStatement ps = kn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(chuyenNgayGio(rs.getString(2)));
                data.add(laySDTQuaMaKH(rs.getString(3)));
                data.add(rs.getString(4));
                data.add(chuanHoaTien(rs.getString(5)));
                data.add(layTenNV(rs.getString(6)));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();
            kn.close();
        } catch (Exception e) {
            System.err.println("Loi btn_TimKiemHDNVMouseClicked()");
        }
    }//GEN-LAST:event_btn_TimKiemHDNVMouseClicked
    String chuanHoaTien(String tien) {
        String t = "";
        if (tien == null) {
            return "0";
        }
        t = tien.substring(0, tien.length() - 5);
        return t;
    }

    public long layDonGia(String maDV, String tgLap) {
        try {

            String sql = "SELECT dongia FROM DONGIA WHERE MADV='" + maDV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            CallableStatement c = ketNoi.prepareCall("{call loadDGganx(?,?)}");
            c.setString(1, maDV);
            c.setString(2, tgLap);
            ResultSet rs1 = c.executeQuery();
            while (rs.next()) {

                return Long.valueOf(chuanHoaTien(rs.getString(1)));
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi layDonGia()");
        }
        return 0;

    }

    public String layTenDV(String maDV) {
        try {

            String sql = "SELECT tendv FROM dichvu WHERE MADV='" + maDV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                return rs.getString(1);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi layTenDV()");
        }
        return null;
    }

    public String layLoaiDV(String maDV) {
        try {

            //String sql = "SELECT tenloaidv FROM LOAIDICHVU WHERE MALOAIDV='"+maLoaiDV+"'";
            String sql = "SELECT MALOAIDV FROM dbo.DICHVU WHERE MADV='" + maDV + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String maLoaiDV = rs.getString(1);
                try {
                    //String sql = "SELECT tenloaidv FROM LOAIDICHVU WHERE MALOAIDV='"+maLoaiDV+"'";
                    String sql1 = "SELECT TENLOAIDV FROM LOAIDICHVU WHERE MALOAIDV='" + maLoaiDV + "'";
                    PreparedStatement ps1 = ketNoi.prepareStatement(sql1);
                    ResultSet rs1 = ps1.executeQuery();

                    while (rs1.next()) {
                        return rs1.getString(1);
                    }
                    rs1.close();
                    ps1.close();
                    rs.close();
                    ps.close();
//                    ketNoi.close();
                } catch (SQLException ex) {
                    System.err.println("Loi layLoaiDV()");
                }

            }
        } catch (SQLException ex) {
            System.err.println("Loi layLoaiDV()");
        }
        return null;
    }
    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        int j = tbHoaDon.getSelectedRow();

        int i = tbHoaDon.convertRowIndexToModel(j);

        dtm = (DefaultTableModel) tbHoaDon.getModel();
        String maHD = dtm.getValueAt(i, 0).toString();
        txt_HoaDonMa.setText(maHD);
        String tgLap = chuyenNgayGio2(dtm.getValueAt(i, 1).toString());
        try {
            dtm = (DefaultTableModel) tbCTHoaDon.getModel();
            dtm.setNumRows(0);
            String sql = "SELECT * FROM dbo.CT_HOADON WHERE MAHD ='" + maHD + "'";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(layLoaiDV(rs.getString(2)));
                data.add(layTenDV(rs.getString(2)));
                data.add(rs.getString(3));
                String maDV = rs.getString(2);
                CallableStatement c = ketNoi.prepareCall("{call loadDGganx(?,?)}");
                c.setString(1, maDV);
                c.setTimestamp(2, Timestamp.valueOf(tgLap));
                ResultSet rs1 = c.executeQuery();
                while (rs1.next()) {
                    data.add(chuanHoaTien(rs1.getString(1)));
                }
                dtm.addRow(data);
            }
            TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(dtm);
            tbCTHoaDon.setRowSorter(sorter);
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi tbHoaDonMouseClicked()");
        }
    }//GEN-LAST:event_tbHoaDonMouseClicked
    boolean checkHD(String maHD) {

        String sql = "select * from dbo.HOADON WHERE MAHD='" + maHD + "'";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (Exception e) {
            System.err.println("Loi checkHD!");
        }
        return false;

    }

    void loadDV() {

        if (cbLuaChonKhoiTaoDV.getSelectedItem().toString().equals("Dịch vụ")) {
            String[] colName = {"Mã dịch vụ", "Tên dịch vụ", "Loại", "Giá",
                "Thời gian cập nhật", "Hình ảnh", "Đang hoạt động"};

            dtm = (DefaultTableModel) tbDV.getModel();
            dtm.setColumnIdentifiers(colName);
            dtm.setNumRows(0);
            try {
                String maDV = "";
                String sql = "SELECT * FROM DICHVU";
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Vector<Object> data = new Vector<>();
                    data.add(rs.getString(1));

                    maDV = data.get(0).toString();

//                    Connection ketNoi = KNCSDL.layKetNoi();
                    CallableStatement c = ketNoi.prepareCall("{call loadDG (?)}");
                    c.setString(1, maDV);
                    ResultSet rs2 = c.executeQuery();

                    data.add(rs.getString(2));
                    data.add(layLoaiDV(rs.getString(1)));

                    while (rs2.next()) {
                        data.add(rs2.getString(1).substring(0, rs2.getString(1).length() - 5));
                        data.add(chuyenNgayGio(rs2.getString(2)));
                    }
                    data.add(rs.getString(4));
                    data.add(rs.getBoolean(5) == true ? "Có" : "Không");
                    dtm.addRow(data);
                }
                rs.close();
                ps.close();
//                ketNoi.close();
            } catch (SQLException ex) {
                System.err.println("Loi LoadDichVu()");
            }
        } else {
            loadLoaiDV();
        }
        btnLamMoiDV.setVisible(true); //Ẩn nút làm mới
        btnSuaDV.setEnabled(false);
    }

    void loadLoaiDV() {

        String[] colName = {"Mã loại dịch vụ", "Tên loại dịch vụ", "Đang hoạt động"};
        try {
            dtm = (DefaultTableModel) tbDV.getModel();

            dtm.setColumnIdentifiers(colName);
            dtm.setNumRows(0);
            String sql = "SELECT * FROM LOAIDICHVU";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getBoolean(3) == true ? "Có" : "Không");
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi LoadDichVu()");
        }
    }

    void loadComboBox_LoaiDV() {
        cbNhomDV.removeAllItems();
        cbNhomDV_ThongKe.removeAllItems();
        cbNhomDV_ThongKe.addItem(" ");

        String sql = "select TENLOAIDV from LOAIDICHVU";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                cbNhomDV.addItem(rs.getString("TENLOAIDV"));
                cbNhomDV_ThongKe.addItem(rs.getString("TENLOAIDV"));
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi LoadLoaiDV");
        }
    }

    void lamMoiDV_LDV() {
        if (cbLuaChonKhoiTaoDV.getSelectedIndex() == 1) {
            loadLoaiDV();
            jLabel18.setVisible(false);
            cbNhomDV.setVisible(false);
            jLabel20.setVisible(false);
            txt_GiaDV.setVisible(false);
            lb_HinhAnh.setVisible(false);
            txt_HinhAnhDV.setVisible(false);
            btn_ChonAnh.setVisible(false);
            lb_Hinh.setVisible(false);

        } else {
            loadDV();
            loadComboBox_LoaiDV();
            btn_ChonAnh.setVisible(true);
            lb_Hinh.setVisible(true);
            jLabel18.setVisible(true);
            cbNhomDV.setVisible(true);
            jLabel20.setVisible(true);
            txt_GiaDV.setVisible(true);
            lb_HinhAnh.setVisible(true);
            txt_HinhAnhDV.setVisible(true);
        }
        txt_TenDV.setText("");
//        cbNhomDV.setSelectedIndex(0);
        txt_GiaDV.setText("");
        txt_HinhAnhDV.setText("");
        btnSuaDV.setEnabled(false);
        buttonGroup1.clearSelection();
    }
    private void cbLuaChonKhoiTaoDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLuaChonKhoiTaoDVActionPerformed
        // TODO add your handling code here:
        lamMoiDV_LDV();
    }//GEN-LAST:event_cbLuaChonKhoiTaoDVActionPerformed

    private void tbDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDVMouseClicked
        // TODO add your handling code here:

        dtm = (DefaultTableModel) tbDV.getModel();
        btnSuaDV.setEnabled(true);
        btn_XoaDV.setEnabled(true);
        if (cbLuaChonKhoiTaoDV.getSelectedIndex() == 0) {

            int j = tbDV.getSelectedRow();

            int i = tbDV.convertRowIndexToModel(j);

            this.maDV = dtm.getValueAt(i, 0).toString();
            txt_TenDV.setText(dtm.getValueAt(i, 1).toString());
            cbNhomDV.setSelectedItem(dtm.getValueAt(i, 2).toString());
            txt_GiaDV.setText(dtm.getValueAt(i, 3).toString());
            txt_HinhAnhDV.setText(dtm.getValueAt(i, 5).toString());
            lb_Hinh.setIcon(ResizeImage(txt_HinhAnhDV.getText()));
            if (dtm.getValueAt(i, 6).toString().equals("Có")) {
                rb_CoHoatDong.setSelected(true);
            } else {
                rb_KhongHoatDong.setSelected(true);
            }
        } else {

            jLabel18.setVisible(false);
            cbNhomDV.setVisible(false);
            jLabel20.setVisible(false);
            txt_GiaDV.setVisible(false);
            lb_HinhAnh.setVisible(false);
            txt_HinhAnhDV.setVisible(false);
            btn_ChonAnh.setVisible(false);
            lb_Hinh.setVisible(false);

            int j = tbDV.getSelectedRow();

            int i = tbDV.convertRowIndexToModel(j);

            this.maLoaiDV = dtm.getValueAt(i, 0).toString();
            txt_TenDV.setText(dtm.getValueAt(i, 1).toString());
            if (dtm.getValueAt(i, 2).toString().equals("Có")) {
                rb_CoHoatDong.setSelected(true);
            } else {
                rb_KhongHoatDong.setSelected(true);
            }
        }
        btnLamMoiDV.setVisible(true);
    }//GEN-LAST:event_tbDVMouseClicked
    public ImageIcon ResizeImage(String ImagePath) {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(lb_Hinh.getWidth(), lb_Hinh.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }

    private void btn_ChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ChonAnhActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        //filter the files
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "jpg", "gif", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showOpenDialog(null);
        //if the user click on save in Jfilechooser
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lb_Hinh.setIcon(ResizeImage(path));
            txt_HinhAnhDV.setText(path);
        } //if the user click on save in Jfilechooser
        else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No File Select");
        }
    }//GEN-LAST:event_btn_ChonAnhActionPerformed

    private void btnSuaDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuaDVMouseClicked
        // TODO add your handling code here:
        String maDV = this.maDV;
        if (cbLuaChonKhoiTaoDV.getSelectedItem().toString().equals("Dịch vụ") && btnSuaDV.isEnabled()) {

            if (checkFillDV()) {
                if (!kt_TonTaiDV(maDV, txt_TenDV.getText().trim(), layMaLoaiDV(cbNhomDV.getSelectedItem().toString()))) {
                    String sql = "update [dichvu] set tendv=?,maloaidv=?, hinhanh=?, trangthai =?  where madv=?";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql);
                        ps.setString(1, chuanHoa(txt_TenDV.getText()));
                        ps.setString(2, layMaLoaiDV(cbNhomDV.getSelectedItem().toString()));
                        if (txt_HinhAnhDV.getText().trim().equals("")) {
                            ps.setString(3, "NO PICTURE");
                        } else {
                            ps.setString(3, txt_HinhAnhDV.getText());
                        }
                        if (rb_KhongHoatDong.isSelected()) {
                            ps.setBoolean(4, false);
                        } else {
                            ps.setBoolean(4, true);
                        }
                        ps.setString(5, maDV);
                        ps.executeUpdate();

                        them_DonGia(maDV, Long.valueOf(txt_GiaDV.getText()));
                        JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                        loadDV();
                        txt_TenDV.setText("");
                        txt_GiaDV.setText("");
                        txt_HinhAnhDV.setText("");
                        rb_KhongHoatDong.setSelected(false);

                        ps.close();

                    } catch (Exception ex) {
                        System.out.println("ERR CapNhatdv()");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Dịch vụ đã tồn tại");
                }
                btnSuaDV.setEnabled(false);
//                btnXoaDV.setEnabled(false);
            }
        } else if (cbLuaChonKhoiTaoDV.getSelectedItem().toString().equals("Loại ịch vụ") && btnSuaDV.isEnabled()) {

            String maLoaiDV = this.maLoaiDV;
            btn_ChonAnh.setVisible(false);
            lb_Hinh.setVisible(false);
            if (txt_TenDV.getText().equals("") || kt_TonTaiLoaiDV(maLoaiDV, txt_TenDV.getText().trim())) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên loại dịch vụ hoặc loại dịch vụ này đã tồn tại!");
                return;
            } else {
                int sl = laySoLuong("LOAIDICHVU") + 1;
                String sql = "update [LOAIDICHVU] set tenloaidv=? , trangthai=?  where maloaidv=?";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.setString(1, chuanHoa(txt_TenDV.getText()));
                    if (rb_KhongHoatDong.isSelected()) {
                        ps.setBoolean(2, false);
                    } else {
                        ps.setBoolean(2, true);
                    }
                    ps.setString(3, maLoaiDV);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Cập nhật thành công!");
                    txt_TenDV.setText("");
                    loadLoaiDV();

                    ps.close();
//                    ketNoi.close();
                } catch (Exception ex) {
                    System.out.println("ERR capNhatLoaidv()");
                }
            }
        }
    }//GEN-LAST:event_btnSuaDVMouseClicked

    private void btn_XoaHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaHoaDonMouseClicked
        // TODO add your handling code here:
        /////
        if (checkHD(txt_HoaDonMa.getText().trim())) {
            int i = JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xoá hay không", "Xác nhận xoá hoá đơn", 0);
            if (i == JOptionPane.YES_OPTION) {
                Connection kn = KNCSDL.layKetNoi();
                String sql = "DELETE dbo.HOADON WHERE MAHD=?";

                try {
                    PreparedStatement ps = kn.prepareStatement(sql);
                    ps.setString(1, txt_HoaDonMa.getText().trim());
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Xoá hoá đơn thành công!");
                    loadHoaDon();
                    xoaTrangHD();
                    ps.close();
                    kn.close();
                } catch (Exception e) {
                    System.err.println("Loi xoa hoa don!");
                }

            }
        } else {
            JOptionPane.showMessageDialog(this, "Mã hoá đơn không tồn tại");
            return;
        }
    }//GEN-LAST:event_btn_XoaHoaDonMouseClicked

    private void btnLamMoiDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiDVMouseClicked
        // TODO add your handling code here:
        lamMoiDV_LDV();
    }//GEN-LAST:event_btnLamMoiDVMouseClicked

    private void pnKhachHangMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnKhachHangMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_pnKhachHangMouseMoved

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        int i = jTabbedPane1.getSelectedIndex();
        switch (i) {
            case 0: {
                loadNV();
                dtm = (DefaultTableModel) tbDanhSachNhanVien.getModel();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(dtm);
                tbDanhSachNhanVien.setRowSorter(sorter);
                xoaTrangNV();
                break;
            }
            case 1: {
                loadKH();
                btnSuaKH.setEnabled(false);
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(dtm);
                tbDanhSachKhachHang.setRowSorter(sorter);
                xoaTrangKH();
                break;
            }

            case 2: {
                xoaTrangHD();
                loadHoaDon();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(dtm);
                tbHoaDon.setRowSorter(sorter);
                loadcb_HoaDonNV();
                break;
            }
            case 3: {
                txt_TenDangNhap.setText("");
                pw_MatKhauNV1.setText("");
                pw_MatKhauNV2.setText("");
                txt_TenDangNhapDMK.setText("");
                pw_MatKhauDMK1.setText("");
                pw_MatKhauDMK2.setText("");
                loadDSTaiKhoan();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(dtm);
                tb_TaiKhoan.setRowSorter(sorter);
                loadCBTaiKhoan1TTK();
                break;
            }
            case 4: {
                txt_TenDV.setText("");
                txt_GiaDV.setText("");
                txt_HinhAnhDV.setText("");
                buttonGroup1.clearSelection();
                loadDV();
                TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(dtm);
                tbDV.setRowSorter(sorter);
                btnSuaDV.setEnabled(false);
                btn_XoaDV.setEnabled(false);
                loadComboBox_LoaiDV();
                break;
            }
            case 5: {
                cbNhomDV_ThongKe.setSelectedItem("");
                cb_ThoiGian.setSelectedItem("");
                txt_TongDoanhThu.setText("0 VND");
                txt_TongChietKhau.setText("0 VND");
                txt_TongLuotKhach.setText("0");
                loadComboBox_LoaiDV();
                break;
            }
            default:

        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void txt_CMNDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CMNDKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_CMNDKeyTyped

    private void txt_SoDTNVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SoDTNVKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_SoDTNVKeyTyped

    private void txt_SoDTKHKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SoDTKHKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_SoDTKHKeyTyped

    private void txt_DiemTLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_DiemTLKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_DiemTLKeyTyped

    private void btn_ThongKeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThongKeMouseClicked
        // TODO add your handling code here:

        jPanel7.setVisible(true);
        jpanel_ThongKe.removeAll();
        jPanel_XuHuong.removeAll();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tuNgay = sdf.format(date_BD.getSelectedDate().getTime());
        String denNgay = sdf.format(date_KT.getSelectedDate().getTime());

        try {
            Date bd = sdf.parse(tuNgay);
            Date kt = sdf.parse(denNgay);
            if (bd.compareTo(kt) > 0) {
                JOptionPane.showMessageDialog(this, "Thời gian không hợp lệ");
                return;
            }
        } catch (ParseException ex) {
        }

        SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/YYYY");
        String date1 = sdf2.format(date_BD.getSelectedDate().getTime());
        String date2 = sdf2.format(date_KT.getSelectedDate().getTime());
        String thongBao;
        if (date1.equals(date2)) {
            thongBao = "THỐNG KÊ XU HƯỚNG DỊCH VỤ " + cbNhomDV_ThongKe.getSelectedItem().toString().toUpperCase() + " NGÀY " + date1;
        } else {
            thongBao = "THỐNG KÊ XU HƯỚNG DỊCH VỤ " + cbNhomDV_ThongKe.getSelectedItem().toString().toUpperCase() + " TỪ NGÀY " + date1 + " ĐẾN NGÀY " + date2;
        }

        try {
            CallableStatement c = ketNoi.prepareCall("{call THONG_KE_DOANH_THU (?,?)}");
            c.setString(1, tuNgay);
            c.setString(2, denNgay);
            ResultSet rs = c.executeQuery();
            while (rs.next()) {
                String tmp = rs.getString(2);
                txt_TongDoanhThu.setText(chuanHoaTien(rs.getString(1)) + " VND");
                if (tmp != null) {
                    txt_TongChietKhau.setText((rs.getString(2).substring(0, (rs.getString(2).length() - 2))) + " VND");
                } else {
                    txt_TongChietKhau.setText("0 VND");
                }
                txt_TongLuotKhach.setText(rs.getString(3));
            }
            rs.close();
            c.close();

        } catch (SQLException ex) {
            System.err.println("Loi createDataset");
        }
        if (cbNhomDV_ThongKe.getSelectedItem().toString().trim().equals("")) {
            jpanel_ThongKe.setVisible(false);
        } else {
            jpanel_ThongKe.setVisible(true);

            JFreeChart pieChart = createChart(createDataset(layMaLoaiDV(cbNhomDV_ThongKe.getSelectedItem().toString()), tuNgay, denNgay), thongBao);
            ChartPanel chartPanel = new ChartPanel(pieChart);
            chartPanel.setPreferredSize(new Dimension(500, 400));
            jpanel_ThongKe.setLayout(new BorderLayout());
            jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
            jpanel_ThongKe.updateUI();
        }
    }//GEN-LAST:event_btn_ThongKeMouseClicked

    private void cbNhomDV_ThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNhomDV_ThongKeActionPerformed
        // TODO add your handling code here:
        //        jpanel_ThongKe.removeAll();
        //        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        //        String tuNgay = sdf.format(date_BD.getSelectedDate().getTime());
        //        String denNgay = sdf.format(date_KT.getSelectedDate().getTime());
        //        SimpleDateFormat sdf2 = new SimpleDateFormat("dd/MM/YYYY");
        //        String date1 = sdf2.format(date_BD.getSelectedDate().getTime());
        //        String date2 = sdf2.format(date_KT.getSelectedDate().getTime());
        //        String thongBao;
        //        if (date1.equals(date2)) {
        //            thongBao = "THỐNG KÊ XU HƯỚNG DỊCH VỤ "+cbNhomDV_ThongKe.getSelectedItem().toString().toUpperCase()+" NGÀY " + date1;
        //        } else {
        //            thongBao = "THỐNG KÊ XU HƯỚNG DỊCH VỤ "+cbNhomDV_ThongKe.getSelectedItem().toString().toUpperCase()+" TỪ NGÀY " + date1 + " ĐẾN NGÀY " + date2;
        //        }
        //        if (cbNhomDV_ThongKe.getSelectedItem().toString().trim().equals("")) {
        //            jpanel_ThongKe.setVisible(false);
        //        } else {
        //            jpanel_ThongKe.setVisible(true);
        //            JFreeChart pieChart = createChart(createDataset(layMaLoaiDV(cbNhomDV_ThongKe.getSelectedItem().toString()), tuNgay, denNgay), thongBao);
        //            ChartPanel chartPanel = new ChartPanel(pieChart);
        //            chartPanel.setPreferredSize(new Dimension(500, 300));
        //            jpanel_ThongKe.setLayout(new BorderLayout());
        //            jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
        //            jpanel_ThongKe.updateUI();
        //        }
    }//GEN-LAST:event_cbNhomDV_ThongKeActionPerformed

    private void txt_TongChietKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_TongChietKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_TongChietKhauActionPerformed

    private void cb_ThoiGianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_ThoiGianActionPerformed
        // TODO add your handling code here:
        date_BD.setBackground(Color.LIGHT_GRAY);
        date_KT.setBackground(Color.LIGHT_GRAY);
        jpanel_ThongKe.removeAll();
        jPanel_XuHuong.removeAll();
        jPanel7.setVisible(true);
        int nam = jYearChooser1.getYear();

        if (cb_ThoiGian.getSelectedItem().toString().equals("Cả năm")) {
            try {
                CallableStatement c = ketNoi.prepareCall("{call THONG_KE_DOANH_THU_THEO_NAM (?)}");
                c.setInt(1, nam);
                ResultSet rs = c.executeQuery();
                while (rs.next()) {
                    txt_TongDoanhThu.setText(chuanHoaTien(rs.getString(1)) + "  VND");
                    if (rs.getString(2) == null) {
                        txt_TongChietKhau.setText("0" + " VND");
                    } else {
                        txt_TongChietKhau.setText((rs.getString(2).substring(0, (rs.getString(2).length() - 2))) + "  VND");
                    }
//                System.out.println("comboTHOIGIAN: "+rs.getString(2).substring(0, rs.getString(2).length() -2));
                    txt_TongLuotKhach.setText(rs.getString(3));
                }
                rs.close();
                c.close();
//                ketNoi.close();
            } catch (SQLException ex) {
                System.err.println("Loi lay doanh thu theo NĂM");
            }
            if (cbNhomDV_ThongKe.getSelectedItem().toString().trim().equals("")) {
                jPanel_XuHuong.setVisible(false);
            } else {
                String title = "THỐNG KÊ XU HƯỚNG DỊCH VỤ " + cbNhomDV_ThongKe.getSelectedItem().toString().toUpperCase() + " TRONG NĂM " + nam;
                jPanel_XuHuong.setVisible(true);
                JFreeChart pieChart = createChart(createDataset(layMaLoaiDV(cbNhomDV_ThongKe.getSelectedItem().toString()), nam), title);
                ChartPanel chartPanel = new ChartPanel(pieChart);
                chartPanel.setPreferredSize(new Dimension(400, 300));
                jPanel_XuHuong.setLayout(new BorderLayout());
                jPanel_XuHuong.add(chartPanel, BorderLayout.CENTER);
                jPanel_XuHuong.updateUI();
            }
            jpanel_ThongKe.setVisible(true);
            JFreeChart chart = createChart_Category(createPlot(nam), "BIỂU ĐỒ DOANH THU VÀ LƯỢT KHÁCH CÁC THÁNG TRONG NĂM " + nam);
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new java.awt.Dimension(500, 300));
            //setContentPane(chartPanel);
            jpanel_ThongKe.setLayout(new BorderLayout());
            jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
            jpanel_ThongKe.updateUI();
        } else {
            jpanel_ThongKe.setVisible(true);
            int t1 = 0, t2 = 0, t3 = 0;
            if (cb_ThoiGian.getSelectedItem().toString().equals("Quý 1")) {
                t1 = 1;
                t2 = 2;
                t3 = 3;
                JFreeChart chart = createChart_Category(createPlot(nam, 1), "BIỂU ĐỒ DOANH THU VÀ LƯỢT KHÁCH CÁC THÁNG TRONG " + cb_ThoiGian.getSelectedItem().toString().toUpperCase() + " NĂM " + nam);
                ChartPanel chartPanel = new ChartPanel(chart);
                chartPanel.setPreferredSize(new java.awt.Dimension(500, 300));
                //setContentPane(chartPanel);
                jpanel_ThongKe.setLayout(new BorderLayout());
                jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
                jpanel_ThongKe.updateUI();
            } else if (cb_ThoiGian.getSelectedItem().toString().equals("Quý 2")) {
                t1 = 4;
                t2 = 5;
                t3 = 6;
                JFreeChart chart = createChart_Category(createPlot(nam, 2), "BIỂU ĐỒ DOANH THU VÀ LƯỢT KHÁCH CÁC THÁNG TRONG " + cb_ThoiGian.getSelectedItem().toString().toUpperCase() + " NĂM " + nam);
                ChartPanel chartPanel = new ChartPanel(chart);
                chartPanel.setPreferredSize(new java.awt.Dimension(500, 300));
                //setContentPane(chartPanel);
                jpanel_ThongKe.setLayout(new BorderLayout());
                jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
                jpanel_ThongKe.updateUI();
            } else if (cb_ThoiGian.getSelectedItem().toString().equals("Quý 3")) {
                t1 = 7;
                t2 = 8;
                t3 = 9;
                JFreeChart chart = createChart_Category(createPlot(nam, 3), "BIỂU ĐỒ DOANH THU VÀ LƯỢT KHÁCH CÁC THÁNG TRONG " + cb_ThoiGian.getSelectedItem().toString().toUpperCase() + " NĂM " + nam);
                ChartPanel chartPanel = new ChartPanel(chart);
                chartPanel.setPreferredSize(new java.awt.Dimension(500, 300));
                //setContentPane(chartPanel);
                jpanel_ThongKe.setLayout(new BorderLayout());
                jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
                jpanel_ThongKe.updateUI();
            } else if (cb_ThoiGian.getSelectedItem().toString().equals("Quý 4")) {
                t1 = 10;
                t2 = 11;
                t3 = 12;
                JFreeChart chart = createChart_Category(createPlot(nam, 4), "BIỂU ĐỒ DOANH THU VÀ LƯỢT KHÁCH CÁC THÁNG TRONG " + cb_ThoiGian.getSelectedItem().toString().toUpperCase() + " NĂM " + nam);
                ChartPanel chartPanel = new ChartPanel(chart);
                chartPanel.setPreferredSize(new java.awt.Dimension(500, 300));
                //setContentPane(chartPanel);
                jpanel_ThongKe.setLayout(new BorderLayout());
                jpanel_ThongKe.add(chartPanel, BorderLayout.CENTER);
                jpanel_ThongKe.updateUI();
            }

            try {
                CallableStatement c = ketNoi.prepareCall("{call THONG_KE_DOANH_THU_THEO_QUY (?,?,?,?)}");
                c.setInt(1, t1);
                c.setInt(2, t2);
                c.setInt(3, t3);
                c.setInt(4, nam);
                ResultSet rs = c.executeQuery();
                while (rs.next()) {
                    txt_TongDoanhThu.setText(chuanHoaTien(rs.getString(1)) + "  VND");
                    if (rs.getString(2) == null) {
                        txt_TongChietKhau.setText("0" + " VND");
                    } else {
                        txt_TongChietKhau.setText((rs.getString(2).substring(0, (rs.getString(2).length() - 2))) + "  VND");
                    }

//                    System.out.println("THEO QUY: " + rs.getString(2).substring(0, rs.getString(2).length() - 2));
                    txt_TongLuotKhach.setText(rs.getString(3));
                }
                rs.close();
                c.close();
            } catch (SQLException ex) {
                System.err.println("Loi lay doanh thu theo quý");
            }
            if (cbNhomDV_ThongKe.getSelectedItem().toString().trim().equals("")) {
                jPanel_XuHuong.setVisible(false);
            } else {
                String title = "THỐNG KÊ XU HƯỚNG DỊCH VỤ " + cbNhomDV_ThongKe.getSelectedItem().toString().toUpperCase() + " TRONG " + cb_ThoiGian.getSelectedItem().toString().toUpperCase() + " NĂM " + nam;
                jPanel_XuHuong.setVisible(true);
                JFreeChart pieChart = createChart(createDataset(layMaLoaiDV(cbNhomDV_ThongKe.getSelectedItem().toString()), nam, t1, t2, t3), title);
                ChartPanel chartPanel = new ChartPanel(pieChart);
                chartPanel.setPreferredSize(new Dimension(400, 300));
                jPanel_XuHuong.setLayout(new BorderLayout());
                jPanel_XuHuong.add(chartPanel, BorderLayout.CENTER);
                jPanel_XuHuong.updateUI();
            }
        }

    }//GEN-LAST:event_cb_ThoiGianActionPerformed


    private void btn_XoaTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaTKMouseClicked
        // TODO add your handling code here:

        if (checkTT_TenDangNhap(txt_TenDangNhap.getText())) {
            if (kiemTraVaiTro(layMaNV2(txt_TenDangNhap.getText()))) {
                JOptionPane.showMessageDialog(this, "Tài khoản QUẢN LÝ không thể xóa !");
                return;
            }
            int i = JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xoá hay không ?", "Xác nhận xoá tài khoản", 0);
            if (i == JOptionPane.YES_OPTION) {
                String sql = "DELETE TAIKHOAN WHERE TENDANGNHAP='" + txt_TenDangNhap.getText() + "'";
                try {
                    PreparedStatement ps = ketNoi.prepareStatement(sql);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Xoá tài khoản thành công!");
                    loadDSTaiKhoan();
                    ps.close();
                } catch (SQLException e) {
                    System.out.println("btn_XoaTKMouseClicked()");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên đăng nhập, hoặc tên đăng nhập không tồn tại!");
        }

    }//GEN-LAST:event_btn_XoaTKMouseClicked
    boolean kt_DichVu_DaSuDung(String maDV) {
        String sql = "SELECT * FROM CT_HOADON WHERE MADV = '" + maDV + "'";

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.err.println("Loi kt_DichVu_DaSuDung");
        }

        return false;
    }

    boolean kt_LoaiDichVu_DaSuDung(String maLoaiDV) {
        String sql = "SELECT * FROM DICHVU WHERE MALOAIDV = '" + maLoaiDV + "'";

        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return true;
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.err.println("Loi kt_LoaiDichVu_DaSuDung");
        }

        return false;
    }
    private void btn_XoaDVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaDVMouseClicked
        // TODO add your handling code here:

        if (cbLuaChonKhoiTaoDV.getSelectedItem().toString().equals("Dịch vụ") && btn_XoaDV.isEnabled()) {
            if (kt_DichVu_DaSuDung(maDV) == true) {
                JOptionPane.showMessageDialog(this, "Dịch vụ đã được lập hóa đơn không thể xóa!");
            } else {
                int i = JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xoá dịch vụ " + layTenDV(maDV) + " không ?", "Xác nhận xoá dịch vụ", 0);
                if (i == JOptionPane.YES_OPTION) {
//                    Connection ketNoi = KNCSDL.layKetNoi();
                    String sql = "DELETE DICHVU WHERE MADV='" + maDV + "'";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Xoá dịch vụ thành công!");
                        loadDV();
                        txt_TenDV.setText("");
                        txt_GiaDV.setText("");
                        txt_HinhAnhDV.setText("");
                        rb_CoHoatDong.setSelected(true);
                        btn_XoaDV.setEnabled(false);
                        btnSuaDV.setEnabled(false);
                        ps.close();

                    } catch (SQLException e) {
                        System.out.println("btn_XoaDVMouseClicked()");
                    }
                }
            }
        } else if (cbLuaChonKhoiTaoDV.getSelectedItem().toString().equals("Loại dịch vụ") && btn_XoaDV.isEnabled()) {
            if (kt_LoaiDichVu_DaSuDung(maLoaiDV) == true) {
                JOptionPane.showMessageDialog(this, "Loại dịch vụ tồn tại dịch vụ không thể xóa!");
            } else {
                int i = JOptionPane.showConfirmDialog(this, "Bạn có thực sự muốn xoá loại dịch vụ " + maLoaiDV + " không ?", "Xác nhận xoá dịch vụ", 0);
                if (i == JOptionPane.YES_OPTION) {
//                    Connection ketNoi = KNCSDL.layKetNoi();
                    String sql = "DELETE LOAIDICHVU WHERE MALOAIDV='" + maLoaiDV + "'";
                    try {
                        PreparedStatement ps = ketNoi.prepareStatement(sql);
                        ps.executeUpdate();
                        JOptionPane.showMessageDialog(this, "Xoá loại dịch vụ thành công!");
                        loadLoaiDV();
                        txt_TenDV.setText("");
                        btn_XoaDV.setEnabled(false);
                        btnSuaDV.setEnabled(false);
                        ps.close();

                    } catch (SQLException e) {
                        System.out.println("btn_XoaDVMouseClicked()");
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_XoaDVMouseClicked

    private void txt_GiaDVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_GiaDVKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_GiaDVKeyTyped

    private void txt_TenDVKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_TenDVKeyTyped
        // TODO add your handling code here:
        if (cbLuaChonKhoiTaoDV.getSelectedIndex() == 0) {
            try {
                dtm = (DefaultTableModel) tbDV.getModel();
                dtm.setNumRows(0);
                String s = txt_TenDV.getText();
                s = s + evt.getKeyChar();
                s = s.trim();

                String sql = "SELECT * FROM Dichvu where tendv like N'%" + s + "%'";
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Vector<Object> data = new Vector<>();
                    data.add(rs.getString(1));
                    //                maDV = data.get(0).toString();
                    Connection ketNoi = KNCSDL.layKetNoi();
                    CallableStatement c = ketNoi.prepareCall("{call loadDG (?)}");
                    c.setString(1, rs.getString(1));
                    ResultSet rs2 = c.executeQuery();

                    data.add(rs.getString(2));
                    data.add(layLoaiDV(rs.getString(1)));

                    while (rs2.next()) {
                        data.add(rs2.getString(1).substring(0, rs2.getString(1).length() - 5));
                        data.add(chuyenNgayGio(rs2.getString(2)));
                    }
                    data.add(rs.getString(4));
                    data.add(rs.getBoolean(5) == true ? "Có" : "Không");
                    dtm.addRow(data);
                }
                rs.close();
                ps.close();

            } catch (Exception e) {
                System.err.println("Loi txt_TenDVKeyTyped()");
            }

        } else {
            try {
                dtm = (DefaultTableModel) tbDV.getModel();
                dtm.setNumRows(0);
                String s = txt_TenDV.getText();
                s = s + evt.getKeyChar();
                s = s.trim();

                String sql = "SELECT * FROM LOAIDichvu where tenLOAIdv like N'%" + s + "%'";
                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    Vector<Object> data = new Vector<>();
                    data.add(rs.getString(1));
                    data.add(rs.getString(2));
                    data.add(rs.getBoolean(3) == true ? "Có" : "Không");
                    dtm.addRow(data);
                }
                rs.close();
                ps.close();

            } catch (Exception e) {
                System.err.println("Loi txt_TenDVKeyTyped()");
            }
        }
    }//GEN-LAST:event_txt_TenDVKeyTyped
    public void loadcb_HoaDonNV() {
        cb_HoaDonNV.removeAllItems();

        String sql = "SELECT DISTINCT MANV FROM HOADON";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                cb_HoaDonNV.addItem(layTenNV(rs.getString(1)));
            }
            rs.close();
            ps.close();

        } catch (SQLException e) {
            System.out.println("loadcb_HoaDonNV()");
        }
    }

    public void loadNV() {
        try {
            dtm = (DefaultTableModel) tbDanhSachNhanVien.getModel();
            dtm.setNumRows(0);

            String sql = "SELECT * FROM Nhanvien";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getString(3));
                data.add(chuyenNgay(rs.getString(7)));
                data.add(rs.getString(5));
                data.add(rs.getString(4));
                data.add(rs.getString(6));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi LoadNhanVien()");
        }
    }

    public void loadKH() {
        txt_DiemTL.setEnabled(false);
        try {
            dtm = (DefaultTableModel) tbDanhSachKhachHang.getModel();
            dtm.setNumRows(0);
//           /
            String sql = "SELECT * FROM KHACHHANG";
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                Vector<Object> data = new Vector<>();
                data.add(rs.getString(1));
                data.add(rs.getString(2));
                data.add(rs.getString(3));
                data.add(rs.getString(4));
                data.add(rs.getString(5));
                dtm.addRow(data);
            }
            rs.close();
            ps.close();

        } catch (SQLException ex) {
            System.err.println("Loi LoadKH()");
        }
    }
    // XU LY THONG KE

    JFreeChart createChart(PieDataset dataset, String title) {
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        JFreeChart chart = ChartFactory.createPieChart(
                title, dataset, true, true, true);
        return chart;
    }

    PieDataset createDataset(String maLoaiDV, int nam) {
        DefaultPieDataset dataset = new DefaultPieDataset();

        try {
            CallableStatement c = ketNoi.prepareCall("{call THONG_KE_LOAI_DICH_VU_THEO_NAM (?,?)}");
            c.setString(1, maLoaiDV);
            c.setInt(2, nam);
            ResultSet rs = c.executeQuery();
            while (rs.next()) {
                dataset.setValue(rs.getString(1), rs.getFloat(2));
            }
            rs.close();
            c.close();

        } catch (SQLException ex) {
            System.err.println("Loi createDataset");
        }
        return dataset;
    }

    PieDataset createDataset(String maLoaiDV, int nam, int t1, int t2, int t3) {
        DefaultPieDataset dataset = new DefaultPieDataset();

        try {
            CallableStatement c = ketNoi.prepareCall("{call THONG_KE_LOAI_DICH_VU_THEO_QUY (?,?,?,?,?)}");
            c.setString(1, maLoaiDV);
            c.setInt(2, nam);
            c.setInt(3, t1);
            c.setInt(4, t2);
            c.setInt(5, t3);
            ResultSet rs = c.executeQuery();
            while (rs.next()) {
                dataset.setValue(rs.getString(1), rs.getFloat(2));
            }
            rs.close();
            c.close();

        } catch (SQLException ex) {
            System.err.println("Loi createDataset");
        }
        return dataset;
    }

    PieDataset createDataset(String maLoaiDV, String tuNgay, String denNgay) {
        DefaultPieDataset dataset = new DefaultPieDataset();
        try {
            CallableStatement c = ketNoi.prepareCall("{call THONG_KE_LOAI_DICH_VU (?,?,?)}");
            c.setString(1, maLoaiDV);
            c.setString(2, tuNgay);
            c.setString(3, denNgay);
            ResultSet rs = c.executeQuery();
            while (rs.next()) {
                dataset.setValue(rs.getString(1), rs.getFloat(2));
            }
            rs.close();
            c.close();

        } catch (SQLException ex) {
            System.err.println("Loi createDataset");
        }
        return dataset;
    }

    //  BIỂU ĐỒ CỘT, ĐƯỜNG
    JFreeChart createChart_Category(CategoryPlot plot, String title) {
//        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        final JFreeChart chart = new JFreeChart(plot);
        chart.setTitle(title);
        return chart;
    }

    CategoryPlot createPlot(int nam) {
        DefaultCategoryDataset dataset1 = new DefaultCategoryDataset();

        for (int i = 1; i <= 12; i++) {
            try {
                CallableStatement s = ketNoi.prepareCall("{call LUOT_KHACH_1THANG_TRONG_NAM (?,?)}");

                s.setInt(1, nam);
                s.setInt(2, i);
                ResultSet rs = s.executeQuery();
                while (rs.next()) {
                    dataset1.addValue(rs.getInt(1), "Số khách", "Tháng " + i);
                }

                rs.close();
                s.close();
            } catch (SQLException ex) {
                System.err.println("Loi creatE Plot 1");
            }

        }
        CategoryItemRenderer renderer = new BarRenderer();
        renderer.setDefaultItemLabelsVisible(true);
        final CategoryPlot plot = new CategoryPlot();
        plot.setDataset(dataset1);
        plot.setRenderer(renderer);
        plot.setDomainAxis(new CategoryAxis("Tháng"));
        plot.setRangeAxis(new NumberAxis("lượt"));
        plot.setOrientation(PlotOrientation.VERTICAL);
        plot.setRangeGridlinesVisible(true);
        plot.setDomainGridlinesVisible(true);
        DefaultCategoryDataset dataset2 = new DefaultCategoryDataset();

        for (int i = 1; i <= 12; i++) {

            try {
                CallableStatement c = ketNoi.prepareCall("{call DOANH_THU_1THANG_TRONG_NAM (?,?)}");
                c.setInt(1, nam);
                c.setInt(2, i);
                ResultSet rs = c.executeQuery();
                while (rs.next()) {
                    dataset2.addValue(rs.getLong(1) / 1000000, "Doanh thu", "Tháng " + i);
                }
                rs.close();
                c.close();
            } catch (SQLException ex) {
                System.err.println("Loi creatE Plot 2");
            }
        }
        final CategoryItemRenderer renderer2 = new LineAndShapeRenderer();
        plot.setDataset(1, dataset2);
        plot.setRenderer(1, renderer2);
        final ValueAxis rangeAxis2 = new NumberAxis("triệu đồng");
        plot.setRangeAxis(1, rangeAxis2);
        plot.mapDatasetToRangeAxis(2, 1);
        plot.setDatasetRenderingOrder(DatasetRenderingOrder.FORWARD);
        plot.getDomainAxis().setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        return plot;
    }

    CategoryPlot createPlot(int nam, int quy) {
        int tu = 0, den = 0;
        if (quy == 1) {
            tu = 1;
            den = 3;
        } else if (quy == 2) {
            tu = 4;
            den = 6;
        } else if (quy == 3) {
            tu = 7;
            den = 9;
        } else {
            tu = 10;
            den = 12;
        }
        DefaultCategoryDataset dataset1 = new DefaultCategoryDataset();

        for (int i = tu; i <= den; i++) {
            try {
                CallableStatement s = ketNoi.prepareCall("{call LUOT_KHACH_1THANG_TRONG_NAM (?,?)}");

                s.setInt(1, nam);
                s.setInt(2, i);
                ResultSet rs = s.executeQuery();
                while (rs.next()) {
                    dataset1.addValue(rs.getInt(1), "Số khách", "Tháng " + i);
                }

                rs.close();
                s.close();
            } catch (SQLException ex) {
                System.err.println("Loi creatE Plot quy 1");
            }

        }
        CategoryItemRenderer renderer = new BarRenderer();
        renderer.setDefaultItemLabelsVisible(true);
        final CategoryPlot plot = new CategoryPlot();
        plot.setDataset(dataset1);
        plot.setRenderer(renderer);
        plot.setDomainAxis(new CategoryAxis("Tháng"));
        plot.setRangeAxis(new NumberAxis("lượt"));
        plot.setOrientation(PlotOrientation.VERTICAL);
        plot.setRangeGridlinesVisible(true);
        plot.setDomainGridlinesVisible(true);
        DefaultCategoryDataset dataset2 = new DefaultCategoryDataset();

        for (int i = tu; i <= den; i++) {

            try {
                CallableStatement c = ketNoi.prepareCall("{call DOANH_THU_1THANG_TRONG_NAM (?,?)}");
                c.setInt(1, nam);
                c.setInt(2, i);
                ResultSet rs = c.executeQuery();
                while (rs.next()) {
                    dataset2.addValue(rs.getLong(1) / 1000000, "Doanh thu", "Tháng " + i);
                }
                rs.close();
                c.close();
            } catch (SQLException ex) {
                System.err.println("Loi creatE Plotquy 2");
            }
        }
        final CategoryItemRenderer renderer2 = new LineAndShapeRenderer();
        plot.setDataset(1, dataset2);
        plot.setRenderer(1, renderer2);
        final ValueAxis rangeAxis2 = new NumberAxis("triệu đồng");
        plot.setRangeAxis(1, rangeAxis2);
        plot.mapDatasetToRangeAxis(2, 1);
        plot.setDatasetRenderingOrder(DatasetRenderingOrder.FORWARD);
        plot.getDomainAxis().setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        return plot;
    }

    /* Xử lý biểu đồ */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADMIN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADMIN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADMIN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADMIN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADMIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoiDV;
    private javax.swing.JButton btnSuaDV;
    private javax.swing.JButton btnSuaKH;
    private javax.swing.JButton btnThemDV;
    private javax.swing.JButton btn_ChonAnh;
    private javax.swing.JButton btn_DatLaiNV;
    private javax.swing.JButton btn_DoiMK;
    private javax.swing.JButton btn_HuyKichHoat;
    private javax.swing.JButton btn_HuyKichHoatDMK;
    private javax.swing.JButton btn_KichHoat;
    private javax.swing.JButton btn_KichHoatDMK;
    private javax.swing.JButton btn_LamMoiTK;
    private javax.swing.JButton btn_SuaNV;
    private javax.swing.JButton btn_TaoTK;
    private javax.swing.JButton btn_ThemKH;
    private javax.swing.JButton btn_ThemNV;
    private javax.swing.JButton btn_ThongKe;
    private javax.swing.JButton btn_TimKiemHDNV;
    private javax.swing.JButton btn_TimKiemHoaDon;
    private javax.swing.JButton btn_TimKiemKH;
    private javax.swing.JButton btn_TimKiemNV;
    private javax.swing.JButton btn_TimKiemNgay;
    private javax.swing.JButton btn_XoaDV;
    private javax.swing.JButton btn_XoaHoaDon;
    private javax.swing.JButton btn_XoaKH;
    private javax.swing.JButton btn_XoaTK;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbLuaChonKhoiTaoDV;
    private javax.swing.JComboBox<String> cbNhomDV;
    private javax.swing.JComboBox<String> cbNhomDV_ThongKe;
    private javax.swing.JComboBox<String> cb_HoaDonNV;
    private javax.swing.JComboBox<String> cb_TaiKhoan1;
    private javax.swing.JComboBox<String> cb_TaiKhoan2;
    private javax.swing.JComboBox<String> cb_ThoiGian;
    private datechooser.beans.DateChooserCombo date_BD;
    private datechooser.beans.DateChooserCombo date_HoaDon;
    private datechooser.beans.DateChooserCombo date_KT;
    private javax.swing.ButtonGroup gbtnChonDichVuLoaiDichVu;
    private javax.swing.ButtonGroup gtbGioiTinhNhanVien;
    private org.jfree.chart.resources.JFreeChartResources jFreeChartResources1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel_XuHuong;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JPanel jpanel_ThongKe;
    private javax.swing.JLabel lbDiaChiKhachHang;
    private javax.swing.JLabel lbDiaChiNhanVien1;
    private javax.swing.JLabel lbDiemTichLuy;
    private javax.swing.JLabel lbGioiTinh;
    private javax.swing.JLabel lbNgaySinhNhanVien;
    private javax.swing.JLabel lbQuanLyNhanVien;
    private javax.swing.JLabel lbQuanLyNhanVien1;
    private javax.swing.JLabel lbSoDTKhachHang;
    private javax.swing.JLabel lbSoDTNhanVien;
    private javax.swing.JLabel lbTenKhachHang;
    private javax.swing.JLabel lbTenNV;
    private javax.swing.JLabel lbTenNV1;
    private javax.swing.JLabel lb_DangHoatDong;
    private javax.swing.JLabel lb_Hinh;
    private javax.swing.JLabel lb_HinhAnh;
    private javax.swing.JLabel lb_Loi0;
    private javax.swing.JLabel lb_Loi1;
    private javax.swing.JLabel lb_Loi2;
    private javax.swing.JLabel lb_Loi3;
    private javax.swing.JLabel lb_Loi4;
    private javax.swing.JLabel lb_Loi5;
    private javax.swing.JLabel lb_QLTK;
    private javax.swing.JLabel loi_KH1;
    private javax.swing.JLabel loi_KH2;
    private javax.swing.JLabel loi_KH3;
    private javax.swing.JPanel pnDichVu;
    private javax.swing.JPanel pnHoaDon;
    private javax.swing.JPanel pnKhachHang;
    private javax.swing.JPanel pnNhanVien;
    private javax.swing.JPanel pnTaiKhoan;
    private javax.swing.JPanel pnThongKe;
    private javax.swing.JPasswordField pw_MatKhauDMK1;
    private javax.swing.JPasswordField pw_MatKhauDMK2;
    private javax.swing.JPasswordField pw_MatKhauNV1;
    private javax.swing.JPasswordField pw_MatKhauNV2;
    private javax.swing.JRadioButton rb_CoHoatDong;
    private javax.swing.JRadioButton rb_KhongHoatDong;
    private javax.swing.JRadioButton rb_NamNV;
    private javax.swing.JRadioButton rb_NuNV;
    private javax.swing.JTable tbCTHoaDon;
    private javax.swing.JTable tbDV;
    private javax.swing.JTable tbDanhSachKhachHang;
    private javax.swing.JTable tbDanhSachNhanVien;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTable tb_TaiKhoan;
    private javax.swing.JTextField txt_CMND;
    private javax.swing.JTextField txt_DiaChiKH;
    private javax.swing.JTextField txt_DiaChiNV;
    private javax.swing.JTextField txt_DiemTL;
    private javax.swing.JTextField txt_GiaDV;
    private javax.swing.JTextField txt_HinhAnhDV;
    private javax.swing.JTextField txt_HoaDonKH;
    private javax.swing.JTextField txt_HoaDonMa;
    private javax.swing.JTextField txt_NgaySinhNV;
    private javax.swing.JTextField txt_SoDTKH;
    private javax.swing.JTextField txt_SoDTNV;
    private javax.swing.JTextField txt_TenDV;
    private javax.swing.JTextField txt_TenDangNhap;
    private javax.swing.JTextField txt_TenDangNhapDMK;
    private javax.swing.JTextField txt_TenKH;
    private javax.swing.JTextField txt_TenNV;
    private javax.swing.JTextField txt_TongChietKhau;
    private javax.swing.JTextField txt_TongDoanhThu;
    private javax.swing.JTextField txt_TongLuotKhach;
    // End of variables declaration//GEN-END:variables
}
